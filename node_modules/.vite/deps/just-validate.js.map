{
  "version": 3,
  "sources": ["../../just-validate/dist/just-validate.es.js"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst EMAIL_REGEXP = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst NUMBER_REGEXP = /^[0-9]+$/;\nconst PASSWORD_REGEXP = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\nconst STRONG_PASSWORD_REGEXP = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\nconst isEmpty = (value) => {\n  let newVal = value;\n  if (typeof value === \"string\") {\n    newVal = value.trim();\n  }\n  return !newVal;\n};\nconst isEmail = (value) => {\n  return EMAIL_REGEXP.test(value);\n};\nconst isLengthMoreThanMax = (value, len) => {\n  return value.length > len;\n};\nconst isLengthLessThanMin = (value, len) => {\n  return value.length < len;\n};\nconst isNumber = (value) => {\n  return NUMBER_REGEXP.test(value);\n};\nconst isPassword = (value) => {\n  return PASSWORD_REGEXP.test(value);\n};\nconst isStrongPassword = (value) => {\n  return STRONG_PASSWORD_REGEXP.test(value);\n};\nconst isNumberMoreThanMax = (value, len) => {\n  return value > len;\n};\nconst isNumberLessThanMin = (value, len) => {\n  return value < len;\n};\nvar Rules = /* @__PURE__ */ ((Rules2) => {\n  Rules2[\"Required\"] = \"required\";\n  Rules2[\"Email\"] = \"email\";\n  Rules2[\"MinLength\"] = \"minLength\";\n  Rules2[\"MaxLength\"] = \"maxLength\";\n  Rules2[\"Password\"] = \"password\";\n  Rules2[\"Number\"] = \"number\";\n  Rules2[\"MaxNumber\"] = \"maxNumber\";\n  Rules2[\"MinNumber\"] = \"minNumber\";\n  Rules2[\"StrongPassword\"] = \"strongPassword\";\n  Rules2[\"CustomRegexp\"] = \"customRegexp\";\n  Rules2[\"MinFilesCount\"] = \"minFilesCount\";\n  Rules2[\"MaxFilesCount\"] = \"maxFilesCount\";\n  Rules2[\"Files\"] = \"files\";\n  return Rules2;\n})(Rules || {});\nvar GroupRules = /* @__PURE__ */ ((GroupRules2) => {\n  GroupRules2[\"Required\"] = \"required\";\n  return GroupRules2;\n})(GroupRules || {});\nvar CustomStyleTagIds = /* @__PURE__ */ ((CustomStyleTagIds2) => {\n  CustomStyleTagIds2[\"Label\"] = \"label\";\n  CustomStyleTagIds2[\"LabelArrow\"] = \"labelArrow\";\n  return CustomStyleTagIds2;\n})(CustomStyleTagIds || {});\nconst getDefaultFieldMessage = (rule, ruleValue) => {\n  switch (rule) {\n    case Rules.Required:\n      return \"The field is required\";\n    case Rules.Email:\n      return \"Email has invalid format\";\n    case Rules.MaxLength:\n      return \"The field must contain a maximum of :value characters\".replace(\":value\", String(ruleValue));\n    case Rules.MinLength:\n      return \"The field must contain a minimum of :value characters\".replace(\":value\", String(ruleValue));\n    case Rules.Password:\n      return \"Password must contain minimum eight characters, at least one letter and one number\";\n    case Rules.Number:\n      return \"Value should be a number\";\n    case Rules.StrongPassword:\n      return \"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\";\n    case Rules.MaxNumber:\n      return \"Number should be less or equal than :value\".replace(\":value\", String(ruleValue));\n    case Rules.MinNumber:\n      return \"Number should be more or equal than :value\".replace(\":value\", String(ruleValue));\n    case Rules.MinFilesCount:\n      return \"Files count should be more or equal than :value\".replace(\":value\", String(ruleValue));\n    case Rules.MaxFilesCount:\n      return \"Files count should be less or equal than :value\".replace(\":value\", String(ruleValue));\n    case Rules.Files:\n      return \"Uploaded files have one or several invalid properties (extension/size/type etc)\";\n    default:\n      return \"Value is incorrect\";\n  }\n};\nconst getDefaultGroupMessage = (rule) => {\n  switch (rule) {\n    case GroupRules.Required:\n      return \"The field is required\";\n    default:\n      return \"Group is incorrect\";\n  }\n};\nconst isPromise = (val) => !!val && typeof val.then === \"function\";\nconst getNodeParents = (el) => {\n  let elem = el;\n  const els = [];\n  while (elem) {\n    els.unshift(elem);\n    elem = elem.parentNode;\n  }\n  return els;\n};\nconst getClosestParent = (groups, parents) => {\n  const reversedParents = [...parents].reverse();\n  for (let i = 0, len = reversedParents.length; i < len; ++i) {\n    const parent = reversedParents[i];\n    for (const key in groups) {\n      const group = groups[key];\n      if (group.groupElem === parent) {\n        return [key, group];\n      }\n    }\n  }\n  return null;\n};\nconst getClassList = (classList) => {\n  if (Array.isArray(classList)) {\n    return classList.filter((cls) => cls.length > 0);\n  }\n  if (typeof classList === \"string\" && classList.trim()) {\n    return [...classList.split(\" \").filter((cls) => cls.length > 0)];\n  }\n  return [];\n};\nconst errorLabelCss = `.just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}`;\nconst TOOLTIP_ARROW_HEIGHT = 5;\nconst defaultGlobalConfig = {\n  errorFieldStyle: {\n    color: \"#b81111\",\n    border: \"1px solid #B81111\"\n  },\n  errorFieldCssClass: \"just-validate-error-field\",\n  successFieldCssClass: \"just-validate-success-field\",\n  errorLabelStyle: {\n    color: \"#b81111\"\n  },\n  errorLabelCssClass: \"just-validate-error-label\",\n  successLabelCssClass: \"just-validate-success-label\",\n  focusInvalidField: true,\n  lockForm: true,\n  testingMode: false\n};\nclass JustValidate {\n  constructor(form, globalConfig, dictLocale) {\n    __publicField(this, \"form\", null);\n    __publicField(this, \"fields\", {});\n    __publicField(this, \"groupFields\", {});\n    __publicField(this, \"errors\", {});\n    __publicField(this, \"isValid\", false);\n    __publicField(this, \"isSubmitted\", false);\n    __publicField(this, \"globalConfig\", defaultGlobalConfig);\n    __publicField(this, \"errorLabels\", {});\n    __publicField(this, \"successLabels\", {});\n    __publicField(this, \"eventListeners\", []);\n    __publicField(this, \"dictLocale\", []);\n    __publicField(this, \"currentLocale\");\n    __publicField(this, \"customStyleTags\", {});\n    __publicField(this, \"onSuccessCallback\");\n    __publicField(this, \"onFailCallback\");\n    __publicField(this, \"tooltips\", []);\n    __publicField(this, \"lastScrollPosition\");\n    __publicField(this, \"isScrollTick\");\n    __publicField(this, \"refreshAllTooltips\", () => {\n      this.tooltips.forEach((item) => {\n        item.refresh();\n      });\n    });\n    __publicField(this, \"handleDocumentScroll\", () => {\n      this.lastScrollPosition = window.scrollY;\n      if (!this.isScrollTick) {\n        window.requestAnimationFrame(() => {\n          this.refreshAllTooltips();\n          this.isScrollTick = false;\n        });\n        this.isScrollTick = true;\n      }\n    });\n    __publicField(this, \"formSubmitHandler\", (ev) => {\n      ev.preventDefault();\n      this.isSubmitted = true;\n      this.validateHandler(ev);\n    });\n    __publicField(this, \"handleFieldChange\", (target) => {\n      let currentFieldName;\n      for (const fieldName in this.fields) {\n        const field = this.fields[fieldName];\n        if (field.elem === target) {\n          currentFieldName = fieldName;\n          break;\n        }\n      }\n      if (!currentFieldName) {\n        return;\n      }\n      this.validateField(currentFieldName, true);\n    });\n    __publicField(this, \"handleGroupChange\", (target) => {\n      let currentGroup;\n      let currentGroupName;\n      for (const groupName in this.groupFields) {\n        const group = this.groupFields[groupName];\n        if (group.elems.find((elem) => elem === target)) {\n          currentGroup = group;\n          currentGroupName = groupName;\n          break;\n        }\n      }\n      if (!currentGroup || !currentGroupName) {\n        return;\n      }\n      this.validateGroup(currentGroupName, currentGroup);\n    });\n    __publicField(this, \"handlerChange\", (ev) => {\n      if (!ev.target) {\n        return;\n      }\n      this.handleFieldChange(ev.target);\n      this.handleGroupChange(ev.target);\n      this.renderErrors();\n    });\n    this.initialize(form, globalConfig, dictLocale);\n  }\n  initialize(form, globalConfig, dictLocale) {\n    this.form = null;\n    this.errors = {};\n    this.isValid = false;\n    this.isSubmitted = false;\n    this.globalConfig = defaultGlobalConfig;\n    this.errorLabels = {};\n    this.successLabels = {};\n    this.eventListeners = [];\n    this.customStyleTags = {};\n    this.tooltips = [];\n    if (typeof form === \"string\") {\n      const elem = document.querySelector(form);\n      if (!elem) {\n        throw Error(`Form with ${form} selector not found! Please check the form selector`);\n      }\n      this.setForm(elem);\n    } else if (form instanceof HTMLFormElement) {\n      this.setForm(form);\n    } else {\n      throw Error(`Form selector is not valid. Please specify a string selector or a DOM element.`);\n    }\n    this.globalConfig = __spreadValues(__spreadValues({}, defaultGlobalConfig), globalConfig);\n    if (dictLocale) {\n      this.dictLocale = dictLocale;\n    }\n    if (this.isTooltip()) {\n      const styleTag = document.createElement(\"style\");\n      styleTag.textContent = errorLabelCss;\n      this.customStyleTags[CustomStyleTagIds.Label] = document.head.appendChild(styleTag);\n      this.addListener(\"scroll\", document, this.handleDocumentScroll);\n    }\n  }\n  getLocalisedString(str) {\n    var _a;\n    if (!this.currentLocale || !this.dictLocale.length) {\n      return str;\n    }\n    const localisedStr = (_a = this.dictLocale.find((item) => item.key === str)) == null ? void 0 : _a.dict[this.currentLocale];\n    return localisedStr || str;\n  }\n  getFieldErrorMessage(fieldRule, elem) {\n    const msg = typeof fieldRule.errorMessage === \"function\" ? fieldRule.errorMessage(this.getElemValue(elem), this.fields) : fieldRule.errorMessage;\n    return this.getLocalisedString(msg) || getDefaultFieldMessage(fieldRule.rule, fieldRule.value);\n  }\n  getFieldSuccessMessage(successMessage, elem) {\n    const msg = typeof successMessage === \"function\" ? successMessage(this.getElemValue(elem), this.fields) : successMessage;\n    return this.getLocalisedString(msg);\n  }\n  getGroupErrorMessage(groupRule) {\n    return this.getLocalisedString(groupRule.errorMessage) || getDefaultGroupMessage(groupRule.rule);\n  }\n  getGroupSuccessMessage(groupRule) {\n    return this.getLocalisedString(groupRule.successMessage);\n  }\n  setFieldInvalid(field, fieldRule) {\n    this.fields[field].isValid = false;\n    this.fields[field].errorMessage = this.getFieldErrorMessage(fieldRule, this.fields[field].elem);\n  }\n  setFieldValid(field, successMessage) {\n    this.fields[field].isValid = true;\n    if (successMessage !== void 0) {\n      this.fields[field].successMessage = this.getFieldSuccessMessage(successMessage, this.fields[field].elem);\n    }\n  }\n  setGroupInvalid(groupName, groupRule) {\n    this.groupFields[groupName].isValid = false;\n    this.groupFields[groupName].errorMessage = this.getGroupErrorMessage(groupRule);\n  }\n  setGroupValid(groupName, groupRule) {\n    this.groupFields[groupName].isValid = true;\n    this.groupFields[groupName].successMessage = this.getGroupSuccessMessage(groupRule);\n  }\n  getElemValue(elem) {\n    switch (elem.type) {\n      case \"checkbox\":\n        return elem.checked;\n      case \"file\":\n        return elem.files;\n      default:\n        return elem.value;\n    }\n  }\n  validateGroupRule(groupName, elems, groupRule) {\n    switch (groupRule.rule) {\n      case GroupRules.Required: {\n        if (elems.every((elem) => !elem.checked)) {\n          this.setGroupInvalid(groupName, groupRule);\n        } else {\n          this.setGroupValid(groupName, groupRule);\n        }\n      }\n    }\n  }\n  validateFieldRule(field, elem, fieldRule, afterInputChanged = false) {\n    const ruleValue = fieldRule.value;\n    const elemValue = this.getElemValue(elem);\n    if (fieldRule.plugin) {\n      const result = fieldRule.plugin(elemValue, this.fields);\n      if (!result) {\n        this.setFieldInvalid(field, fieldRule);\n      }\n      return;\n    }\n    switch (fieldRule.rule) {\n      case Rules.Required: {\n        if (isEmpty(elemValue)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.Email: {\n        if (typeof elemValue !== \"string\") {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (!isEmail(elemValue)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.MaxLength: {\n        if (ruleValue === void 0) {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field is not defined. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] should be a number. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof elemValue !== \"string\") {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (elemValue === \"\") {\n          break;\n        }\n        if (isLengthMoreThanMax(elemValue, ruleValue)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.MinLength: {\n        if (ruleValue === void 0) {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field is not defined. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] should be a number. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof elemValue !== \"string\") {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (elemValue === \"\") {\n          break;\n        }\n        if (isLengthLessThanMin(elemValue, ruleValue)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.Password: {\n        if (typeof elemValue !== \"string\") {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (elemValue === \"\") {\n          break;\n        }\n        if (!isPassword(elemValue)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.StrongPassword: {\n        if (typeof elemValue !== \"string\") {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (elemValue === \"\") {\n          break;\n        }\n        if (!isStrongPassword(elemValue)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.Number: {\n        if (typeof elemValue !== \"string\") {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (elemValue === \"\") {\n          break;\n        }\n        if (!isNumber(elemValue)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.MaxNumber: {\n        if (ruleValue === void 0) {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field is not defined. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field should be a number. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof elemValue !== \"string\") {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (elemValue === \"\") {\n          break;\n        }\n        const num = +elemValue;\n        if (Number.isNaN(num) || isNumberMoreThanMax(num, ruleValue)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.MinNumber: {\n        if (ruleValue === void 0) {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field is not defined. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field should be a number. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof elemValue !== \"string\") {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (elemValue === \"\") {\n          break;\n        }\n        const num = +elemValue;\n        if (Number.isNaN(num) || isNumberLessThanMin(num, ruleValue)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.CustomRegexp: {\n        if (ruleValue === void 0) {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field is not defined. This field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          return;\n        }\n        let regexp;\n        try {\n          regexp = new RegExp(ruleValue);\n        } catch (e) {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] should be a valid regexp. This field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        const str = String(elemValue);\n        if (str !== \"\" && !regexp.test(str)) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n        break;\n      }\n      case Rules.MinFilesCount: {\n        if (ruleValue === void 0) {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field is not defined. This field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field should be a number. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (Number.isFinite(elemValue == null ? void 0 : elemValue.length) && elemValue.length < ruleValue) {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        break;\n      }\n      case Rules.MaxFilesCount: {\n        if (ruleValue === void 0) {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field is not defined. This field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field should be a number. The field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        if (Number.isFinite(elemValue == null ? void 0 : elemValue.length) && elemValue.length > ruleValue) {\n          this.setFieldInvalid(field, fieldRule);\n          break;\n        }\n        break;\n      }\n      case Rules.Files: {\n        if (ruleValue === void 0) {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field is not defined. This field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          return;\n        }\n        if (typeof ruleValue !== \"object\") {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field should be an object. This field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          return;\n        }\n        const filesConfig = ruleValue.files;\n        if (typeof filesConfig !== \"object\") {\n          console.error(`Value for ${fieldRule.rule} rule for [${field}] field should be an object with files array. This field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          return;\n        }\n        const isFilePropsInvalid = (file, fileConfig) => {\n          const minSizeInvalid = Number.isFinite(fileConfig.minSize) && file.size < fileConfig.minSize;\n          const maxSizeInvalid = Number.isFinite(fileConfig.maxSize) && file.size > fileConfig.maxSize;\n          const nameInvalid = Array.isArray(fileConfig.names) && !fileConfig.names.includes(file.name);\n          const extInvalid = Array.isArray(fileConfig.extensions) && !fileConfig.extensions.includes(file.name.split(\".\")[file.name.split(\".\").length - 1]);\n          const typeInvalid = Array.isArray(fileConfig.types) && !fileConfig.types.includes(file.type);\n          return minSizeInvalid || maxSizeInvalid || nameInvalid || extInvalid || typeInvalid;\n        };\n        if (typeof elemValue === \"object\" && elemValue !== null) {\n          for (let fileIdx = 0, len = elemValue.length; fileIdx < len; ++fileIdx) {\n            const file = elemValue.item(fileIdx);\n            if (!file) {\n              this.setFieldInvalid(field, fieldRule);\n              break;\n            }\n            const filesInvalid = isFilePropsInvalid(file, filesConfig);\n            if (filesInvalid) {\n              this.setFieldInvalid(field, fieldRule);\n              break;\n            }\n          }\n        }\n        break;\n      }\n      default: {\n        if (typeof fieldRule.validator !== \"function\") {\n          console.error(`Validator for custom rule for [${field}] field should be a function. This field will be always invalid.`);\n          this.setFieldInvalid(field, fieldRule);\n          return;\n        }\n        const result = fieldRule.validator(elemValue, this.fields);\n        if (typeof result !== \"boolean\" && typeof result !== \"function\") {\n          console.error(`Validator return value for [${field}] field should be boolean or function. It will be cast to boolean.`);\n        }\n        if (typeof result === \"function\") {\n          if (afterInputChanged) {\n            this.fields[field].asyncCheckPending = true;\n          } else {\n            this.fields[field].asyncCheckPending = false;\n            const promise = result();\n            if (!isPromise(promise)) {\n              console.error(`Validator function for custom rule for [${field}] field should return a Promise. This field will be always invalid.`);\n              this.setFieldInvalid(field, fieldRule);\n              return;\n            }\n            return promise.then((resp) => {\n              if (!resp) {\n                this.setFieldInvalid(field, fieldRule);\n              }\n            }).catch(() => {\n              this.setFieldInvalid(field, fieldRule);\n            });\n          }\n        }\n        if (!result) {\n          this.setFieldInvalid(field, fieldRule);\n        }\n      }\n    }\n  }\n  validateField(fieldName, afterInputChanged = false) {\n    var _a;\n    const field = this.fields[fieldName];\n    field.isValid = true;\n    const promises = [];\n    [...field.rules].reverse().forEach((rule) => {\n      const res = this.validateFieldRule(fieldName, field.elem, rule, afterInputChanged);\n      if (isPromise(res)) {\n        promises.push(res);\n      }\n    });\n    if (field.isValid) {\n      this.setFieldValid(fieldName, (_a = field.config) == null ? void 0 : _a.successMessage);\n    }\n    return Promise.allSettled(promises);\n  }\n  revalidateField(field) {\n    if (typeof field !== \"string\") {\n      throw Error(`Field selector is not valid. Please specify a string selector.`);\n    }\n    if (!this.fields[field]) {\n      console.error(`Field not found. Check the field selector.`);\n      return Promise.reject();\n    }\n    return new Promise((resolve) => {\n      this.validateField(field, true).finally(() => {\n        this.clearFieldStyle(field);\n        this.clearFieldLabel(field);\n        this.renderFieldError(field);\n        resolve(!!this.fields[field].isValid);\n      });\n    });\n  }\n  validateGroup(groupName, group) {\n    const promises = [];\n    [...group.rules].reverse().forEach((rule) => {\n      const res = this.validateGroupRule(groupName, group.elems, rule);\n      if (isPromise(res)) {\n        promises.push(res);\n      }\n    });\n    return Promise.allSettled(promises);\n  }\n  focusInvalidField() {\n    for (const fieldName in this.fields) {\n      const field = this.fields[fieldName];\n      if (!field.isValid) {\n        setTimeout(() => field.elem.focus(), 0);\n        break;\n      }\n    }\n  }\n  afterSubmitValidation(forceRevalidation = false) {\n    this.renderErrors(forceRevalidation);\n    if (this.globalConfig.focusInvalidField) {\n      this.focusInvalidField();\n    }\n  }\n  validate(forceRevalidation = false) {\n    return new Promise((resolve) => {\n      const promises = [];\n      Object.keys(this.fields).forEach((fieldName) => {\n        const promise = this.validateField(fieldName);\n        if (isPromise(promise)) {\n          promises.push(promise);\n        }\n      });\n      Object.keys(this.groupFields).forEach((groupName) => {\n        const group = this.groupFields[groupName];\n        const promise = this.validateGroup(groupName, group);\n        if (isPromise(promise)) {\n          promises.push(promise);\n        }\n      });\n      if (promises.length) {\n        Promise.allSettled(promises).then(() => {\n          this.afterSubmitValidation(forceRevalidation);\n          resolve(true);\n        });\n      } else {\n        this.afterSubmitValidation(forceRevalidation);\n        resolve(false);\n      }\n    });\n  }\n  revalidate() {\n    return new Promise((resolve) => {\n      this.validateHandler(void 0, true).finally(() => {\n        if (this.globalConfig.focusInvalidField) {\n          this.focusInvalidField();\n        }\n        resolve(this.isValid);\n      });\n    });\n  }\n  validateHandler(ev, forceRevalidation = false) {\n    if (this.globalConfig.lockForm) {\n      this.lockForm();\n    }\n    return this.validate(forceRevalidation).finally(() => {\n      var _a, _b;\n      if (this.globalConfig.lockForm) {\n        this.unlockForm();\n      }\n      if (this.isValid) {\n        (_a = this.onSuccessCallback) == null ? void 0 : _a.call(this, ev);\n      } else {\n        (_b = this.onFailCallback) == null ? void 0 : _b.call(this, this.fields, this.groupFields);\n      }\n    });\n  }\n  setForm(form) {\n    this.form = form;\n    this.form.setAttribute(\"novalidate\", \"novalidate\");\n    this.removeListener(\"submit\", this.form, this.formSubmitHandler);\n    this.addListener(\"submit\", this.form, this.formSubmitHandler);\n  }\n  addListener(type, elem, handler) {\n    elem.addEventListener(type, handler);\n    this.eventListeners.push({ type, elem, func: handler });\n  }\n  removeListener(type, elem, handler) {\n    elem.removeEventListener(type, handler);\n    this.eventListeners = this.eventListeners.filter((item) => item.type !== type || item.elem !== elem);\n  }\n  addField(field, rules, config) {\n    if (typeof field !== \"string\") {\n      throw Error(`Field selector is not valid. Please specify a string selector.`);\n    }\n    const elem = this.form.querySelector(field);\n    if (!elem) {\n      throw Error(`Field with ${field} selector not found! Please check the field selector.`);\n    }\n    if (!Array.isArray(rules) || !rules.length) {\n      throw Error(`Rules argument for the field [${field}] should be an array and should contain at least 1 element.`);\n    }\n    rules.forEach((item) => {\n      if (!(\"rule\" in item || \"validator\" in item || \"plugin\" in item)) {\n        throw Error(`Rules argument for the field [${field}] must contain at least one rule or validator property.`);\n      }\n      if (!item.validator && !item.plugin && (!item.rule || !Object.values(Rules).includes(item.rule))) {\n        throw Error(`Rule should be one of these types: ${Object.values(Rules).join(\", \")}. Provided value: ${item.rule}`);\n      }\n    });\n    this.fields[field] = {\n      elem,\n      rules,\n      isValid: void 0,\n      config\n    };\n    this.setListeners(elem);\n    if (this.isSubmitted) {\n      this.validate();\n    }\n    return this;\n  }\n  removeField(field) {\n    if (typeof field !== \"string\") {\n      throw Error(`Field selector is not valid. Please specify a string selector.`);\n    }\n    if (!this.fields[field]) {\n      console.error(`Field not found. Check the field selector.`);\n      return this;\n    }\n    const type = this.getListenerType(this.fields[field].elem.type);\n    this.removeListener(type, this.fields[field].elem, this.handlerChange);\n    this.clearErrors();\n    delete this.fields[field];\n    return this;\n  }\n  removeGroup(group) {\n    if (typeof group !== \"string\") {\n      throw Error(`Group selector is not valid. Please specify a string selector.`);\n    }\n    if (!this.groupFields[group]) {\n      console.error(`Group not found. Check the group selector.`);\n      return this;\n    }\n    this.groupFields[group].elems.forEach((elem) => {\n      const type = this.getListenerType(elem.type);\n      this.removeListener(type, elem, this.handlerChange);\n    });\n    this.clearErrors();\n    delete this.groupFields[group];\n    return this;\n  }\n  addRequiredGroup(groupField, errorMessage, config, successMessage) {\n    if (typeof groupField !== \"string\") {\n      throw Error(`Group selector is not valid. Please specify a string selector.`);\n    }\n    const elem = this.form.querySelector(groupField);\n    if (!elem) {\n      throw Error(`Group with ${groupField} selector not found! Please check the group selector.`);\n    }\n    const inputs = elem.querySelectorAll(\"input\");\n    const childrenInputs = Array.from(inputs).filter((input) => {\n      const parent = getClosestParent(this.groupFields, getNodeParents(input));\n      if (!parent) {\n        return true;\n      }\n      return parent[1].elems.find((elem2) => elem2 !== input);\n    });\n    this.groupFields[groupField] = {\n      rules: [\n        {\n          rule: GroupRules.Required,\n          errorMessage,\n          successMessage\n        }\n      ],\n      groupElem: elem,\n      elems: childrenInputs,\n      isDirty: false,\n      isValid: void 0,\n      config\n    };\n    inputs.forEach((input) => {\n      this.setListeners(input);\n    });\n    return this;\n  }\n  getListenerType(type) {\n    switch (type) {\n      case \"checkbox\":\n      case \"select-one\":\n      case \"file\":\n      case \"radio\": {\n        return \"change\";\n      }\n      default: {\n        return \"input\";\n      }\n    }\n  }\n  setListeners(elem) {\n    const type = this.getListenerType(elem.type);\n    this.removeListener(type, elem, this.handlerChange);\n    this.addListener(type, elem, this.handlerChange);\n  }\n  clearFieldLabel(fieldName) {\n    var _a, _b;\n    (_a = this.errorLabels[fieldName]) == null ? void 0 : _a.remove();\n    (_b = this.successLabels[fieldName]) == null ? void 0 : _b.remove();\n  }\n  clearFieldStyle(fieldName) {\n    var _a, _b, _c, _d;\n    const field = this.fields[fieldName];\n    const errorStyle = ((_a = field.config) == null ? void 0 : _a.errorFieldStyle) || this.globalConfig.errorFieldStyle;\n    Object.keys(errorStyle).forEach((key) => {\n      field.elem.style[key] = \"\";\n    });\n    const successStyle = ((_b = field.config) == null ? void 0 : _b.successFieldStyle) || this.globalConfig.successFieldStyle || {};\n    Object.keys(successStyle).forEach((key) => {\n      field.elem.style[key] = \"\";\n    });\n    field.elem.classList.remove(...getClassList(((_c = field.config) == null ? void 0 : _c.errorFieldCssClass) || this.globalConfig.errorFieldCssClass), ...getClassList(((_d = field.config) == null ? void 0 : _d.successFieldCssClass) || this.globalConfig.successFieldCssClass));\n  }\n  clearErrors() {\n    var _a, _b;\n    Object.keys(this.errorLabels).forEach((key) => this.errorLabels[key].remove());\n    Object.keys(this.successLabels).forEach((key) => this.successLabels[key].remove());\n    for (const fieldName in this.fields) {\n      this.clearFieldStyle(fieldName);\n    }\n    for (const groupName in this.groupFields) {\n      const group = this.groupFields[groupName];\n      const errorStyle = ((_a = group.config) == null ? void 0 : _a.errorFieldStyle) || this.globalConfig.errorFieldStyle;\n      Object.keys(errorStyle).forEach((key) => {\n        group.elems.forEach((elem) => {\n          var _a2;\n          elem.style[key] = \"\";\n          elem.classList.remove(...getClassList(((_a2 = group.config) == null ? void 0 : _a2.errorFieldCssClass) || this.globalConfig.errorFieldCssClass));\n        });\n      });\n      const successStyle = ((_b = group.config) == null ? void 0 : _b.successFieldStyle) || this.globalConfig.successFieldStyle || {};\n      Object.keys(successStyle).forEach((key) => {\n        group.elems.forEach((elem) => {\n          var _a2;\n          elem.style[key] = \"\";\n          elem.classList.remove(...getClassList(((_a2 = group.config) == null ? void 0 : _a2.successFieldCssClass) || this.globalConfig.successFieldCssClass));\n        });\n      });\n    }\n    this.tooltips = [];\n  }\n  isTooltip() {\n    return !!this.globalConfig.tooltip;\n  }\n  lockForm() {\n    const elems = this.form.querySelectorAll(\"input, textarea, button, select\");\n    for (let i = 0, len = elems.length; i < len; ++i) {\n      elems[i].setAttribute(\"data-just-validate-fallback-disabled\", elems[i].disabled ? \"true\" : \"false\");\n      elems[i].setAttribute(\"disabled\", \"disabled\");\n      elems[i].style.pointerEvents = \"none\";\n      elems[i].style.webkitFilter = \"grayscale(100%)\";\n      elems[i].style.filter = \"grayscale(100%)\";\n    }\n  }\n  unlockForm() {\n    const elems = this.form.querySelectorAll(\"input, textarea, button, select\");\n    for (let i = 0, len = elems.length; i < len; ++i) {\n      if (elems[i].getAttribute(\"data-just-validate-fallback-disabled\") !== \"true\") {\n        elems[i].removeAttribute(\"disabled\");\n      }\n      elems[i].style.pointerEvents = \"\";\n      elems[i].style.webkitFilter = \"\";\n      elems[i].style.filter = \"\";\n    }\n  }\n  renderTooltip(elem, errorLabel, position) {\n    var _a;\n    const { top, left, width, height } = elem.getBoundingClientRect();\n    const errorLabelRect = errorLabel.getBoundingClientRect();\n    const pos = position || ((_a = this.globalConfig.tooltip) == null ? void 0 : _a.position);\n    switch (pos) {\n      case \"left\": {\n        errorLabel.style.top = `${top + height / 2 - errorLabelRect.height / 2}px`;\n        errorLabel.style.left = `${left - errorLabelRect.width - TOOLTIP_ARROW_HEIGHT}px`;\n        break;\n      }\n      case \"top\": {\n        errorLabel.style.top = `${top - errorLabelRect.height - TOOLTIP_ARROW_HEIGHT}px`;\n        errorLabel.style.left = `${left + width / 2 - errorLabelRect.width / 2}px`;\n        break;\n      }\n      case \"right\": {\n        errorLabel.style.top = `${top + height / 2 - errorLabelRect.height / 2}px`;\n        errorLabel.style.left = `${left + width + TOOLTIP_ARROW_HEIGHT}px`;\n        break;\n      }\n      case \"bottom\": {\n        errorLabel.style.top = `${top + height + TOOLTIP_ARROW_HEIGHT}px`;\n        errorLabel.style.left = `${left + width / 2 - errorLabelRect.width / 2}px`;\n        break;\n      }\n    }\n    errorLabel.dataset.direction = pos;\n    const refresh = () => {\n      this.renderTooltip(elem, errorLabel, position);\n    };\n    return {\n      refresh\n    };\n  }\n  createErrorLabelElem(name, errorMessage, config) {\n    const errorLabel = document.createElement(\"div\");\n    errorLabel.innerHTML = errorMessage;\n    const customErrorLabelStyle = this.isTooltip() ? config == null ? void 0 : config.errorLabelStyle : (config == null ? void 0 : config.errorLabelStyle) || this.globalConfig.errorLabelStyle;\n    Object.assign(errorLabel.style, customErrorLabelStyle);\n    errorLabel.classList.add(...getClassList((config == null ? void 0 : config.errorLabelCssClass) || this.globalConfig.errorLabelCssClass), \"just-validate-error-label\");\n    if (this.isTooltip()) {\n      errorLabel.dataset.tooltip = \"true\";\n    }\n    if (this.globalConfig.testingMode) {\n      errorLabel.dataset.testId = `error-label-${name}`;\n    }\n    this.errorLabels[name] = errorLabel;\n    return errorLabel;\n  }\n  createSuccessLabelElem(name, successMessage, config) {\n    if (successMessage === void 0) {\n      return null;\n    }\n    const successLabel = document.createElement(\"div\");\n    successLabel.innerHTML = successMessage;\n    const customSuccessLabelStyle = (config == null ? void 0 : config.successLabelStyle) || this.globalConfig.successLabelStyle;\n    Object.assign(successLabel.style, customSuccessLabelStyle);\n    successLabel.classList.add(...getClassList((config == null ? void 0 : config.successLabelCssClass) || this.globalConfig.successLabelCssClass), \"just-validate-success-label\");\n    if (this.globalConfig.testingMode) {\n      successLabel.dataset.testId = `success-label-${name}`;\n    }\n    this.successLabels[name] = successLabel;\n    return successLabel;\n  }\n  renderErrorsContainer(label, errorsContainer) {\n    const container = errorsContainer || this.globalConfig.errorsContainer;\n    if (typeof container === \"string\") {\n      const elem = this.form.querySelector(container);\n      if (elem) {\n        elem.appendChild(label);\n        return true;\n      } else {\n        console.error(`Error container with ${container} selector not found. Errors will be rendered as usual`);\n      }\n    }\n    if (container instanceof Element) {\n      container.appendChild(label);\n      return true;\n    }\n    if (container !== void 0) {\n      console.error(`Error container not found. It should be a string or existing Element. Errors will be rendered as usual`);\n    }\n    return false;\n  }\n  renderGroupLabel(elem, label, errorsContainer, isSuccess) {\n    if (!isSuccess) {\n      const renderedInErrorsContainer = this.renderErrorsContainer(label, errorsContainer);\n      if (renderedInErrorsContainer) {\n        return;\n      }\n    }\n    elem.appendChild(label);\n  }\n  renderFieldLabel(elem, label, errorsContainer, isSuccess) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    if (!isSuccess) {\n      const renderedInErrorsContainer = this.renderErrorsContainer(label, errorsContainer);\n      if (renderedInErrorsContainer) {\n        return;\n      }\n    }\n    if (elem.type === \"checkbox\" || elem.type === \"radio\") {\n      const labelElem = document.querySelector(`label[for=\"${elem.getAttribute(\"id\")}\"]`);\n      if (((_b = (_a = elem.parentElement) == null ? void 0 : _a.tagName) == null ? void 0 : _b.toLowerCase()) === \"label\") {\n        (_d = (_c = elem.parentElement) == null ? void 0 : _c.parentElement) == null ? void 0 : _d.appendChild(label);\n      } else if (labelElem) {\n        (_e = labelElem.parentElement) == null ? void 0 : _e.appendChild(label);\n      } else {\n        (_f = elem.parentElement) == null ? void 0 : _f.appendChild(label);\n      }\n    } else {\n      (_g = elem.parentElement) == null ? void 0 : _g.appendChild(label);\n    }\n  }\n  showLabels(fields, isError) {\n    Object.keys(fields).forEach((fieldName, i) => {\n      const error = fields[fieldName];\n      const field = this.fields[fieldName];\n      field.isValid = !isError;\n      this.clearFieldStyle(fieldName);\n      this.clearFieldLabel(fieldName);\n      this.renderFieldError(fieldName, error);\n      if (i === 0 && this.globalConfig.focusInvalidField) {\n        setTimeout(() => field.elem.focus(), 0);\n      }\n    });\n  }\n  showErrors(fields) {\n    if (typeof fields !== \"object\") {\n      throw Error(\"[showErrors]: Errors should be an object with key: value format\");\n    }\n    this.showLabels(fields, true);\n  }\n  showSuccessLabels(fields) {\n    if (typeof fields !== \"object\") {\n      throw Error(\"[showSuccessLabels]: Labels should be an object with key: value format\");\n    }\n    this.showLabels(fields, false);\n  }\n  renderFieldError(fieldName, message) {\n    var _a, _b, _c, _d, _e, _f;\n    const field = this.fields[fieldName];\n    if (field.isValid) {\n      if (!field.asyncCheckPending) {\n        const successLabel = this.createSuccessLabelElem(fieldName, message !== void 0 ? message : field.successMessage, field.config);\n        if (successLabel) {\n          this.renderFieldLabel(field.elem, successLabel, (_a = field.config) == null ? void 0 : _a.errorsContainer, true);\n        }\n        field.elem.classList.add(...getClassList(((_b = field.config) == null ? void 0 : _b.successFieldCssClass) || this.globalConfig.successFieldCssClass));\n      }\n      return;\n    }\n    this.isValid = false;\n    field.elem.classList.add(...getClassList(((_c = field.config) == null ? void 0 : _c.errorFieldCssClass) || this.globalConfig.errorFieldCssClass));\n    const errorLabel = this.createErrorLabelElem(fieldName, message !== void 0 ? message : field.errorMessage, field.config);\n    this.renderFieldLabel(field.elem, errorLabel, (_d = field.config) == null ? void 0 : _d.errorsContainer);\n    if (this.isTooltip()) {\n      this.tooltips.push(this.renderTooltip(field.elem, errorLabel, (_f = (_e = field.config) == null ? void 0 : _e.tooltip) == null ? void 0 : _f.position));\n    }\n  }\n  renderErrors(forceRevalidation = false) {\n    var _a, _b, _c, _d;\n    if (!this.isSubmitted && !forceRevalidation) {\n      return;\n    }\n    this.clearErrors();\n    this.isValid = true;\n    for (const groupName in this.groupFields) {\n      const group = this.groupFields[groupName];\n      if (group.isValid) {\n        group.elems.forEach((elem) => {\n          var _a2, _b2;\n          Object.assign(elem.style, ((_a2 = group.config) == null ? void 0 : _a2.successFieldStyle) || this.globalConfig.successFieldStyle);\n          elem.classList.add(...getClassList(((_b2 = group.config) == null ? void 0 : _b2.successFieldCssClass) || this.globalConfig.successFieldCssClass));\n        });\n        const successLabel = this.createSuccessLabelElem(groupName, group.successMessage, group.config);\n        if (successLabel) {\n          this.renderGroupLabel(group.groupElem, successLabel, (_a = group.config) == null ? void 0 : _a.errorsContainer, true);\n        }\n        continue;\n      }\n      this.isValid = false;\n      group.elems.forEach((elem) => {\n        var _a2, _b2;\n        Object.assign(elem.style, ((_a2 = group.config) == null ? void 0 : _a2.errorFieldStyle) || this.globalConfig.errorFieldStyle);\n        elem.classList.add(...getClassList(((_b2 = group.config) == null ? void 0 : _b2.errorFieldCssClass) || this.globalConfig.errorFieldCssClass));\n      });\n      const errorLabel = this.createErrorLabelElem(groupName, group.errorMessage, group.config);\n      this.renderGroupLabel(group.groupElem, errorLabel, (_b = group.config) == null ? void 0 : _b.errorsContainer);\n      if (this.isTooltip()) {\n        this.tooltips.push(this.renderTooltip(group.groupElem, errorLabel, (_d = (_c = group.config) == null ? void 0 : _c.tooltip) == null ? void 0 : _d.position));\n      }\n    }\n    for (const fieldName in this.fields) {\n      this.renderFieldError(fieldName);\n    }\n  }\n  destroy() {\n    this.eventListeners.forEach((event) => {\n      this.removeListener(event.type, event.elem, event.func);\n    });\n    Object.keys(this.customStyleTags).forEach((key) => {\n      this.customStyleTags[key].remove();\n    });\n    this.clearErrors();\n    if (this.globalConfig.lockForm) {\n      this.unlockForm();\n    }\n  }\n  refresh() {\n    this.destroy();\n    if (!this.form) {\n      console.error(\"Cannot initialize the library! Form is not defined\");\n    } else {\n      this.initialize(this.form, this.globalConfig);\n      Object.keys(this.fields).forEach((key) => {\n        this.addField(key, [...this.fields[key].rules], this.fields[key].config);\n      });\n    }\n  }\n  setCurrentLocale(locale) {\n    if (typeof locale !== \"string\" && locale !== void 0) {\n      console.error(\"Current locale should be a string\");\n      return;\n    }\n    this.currentLocale = locale;\n    if (this.isSubmitted) {\n      this.validate();\n    }\n  }\n  onSuccess(callback) {\n    this.onSuccessCallback = callback;\n    return this;\n  }\n  onFail(callback) {\n    this.onFailCallback = callback;\n    return this;\n  }\n}\nexport { JustValidate as default };\n"],
  "mappings": ";AAAA,IAAI,YAAY,OAAO;AACvB,IAAI,sBAAsB,OAAO;AACjC,IAAI,eAAe,OAAO,UAAU;AACpC,IAAI,eAAe,OAAO,UAAU;AACpC,IAAI,kBAAkB,CAAC,KAAK,KAAK,UAAU,OAAO,MAAM,UAAU,KAAK,KAAK,EAAE,YAAY,MAAM,cAAc,MAAM,UAAU,MAAM,MAAM,CAAC,IAAI,IAAI,OAAO;AAC1J,IAAI,iBAAiB,CAAC,GAAG,MAAM;AAC7B,WAAS,QAAQ,MAAM,IAAI,CAAC;AAC1B,QAAI,aAAa,KAAK,GAAG,IAAI;AAC3B,sBAAgB,GAAG,MAAM,EAAE,KAAK;AACpC,MAAI;AACF,aAAS,QAAQ,oBAAoB,CAAC,GAAG;AACvC,UAAI,aAAa,KAAK,GAAG,IAAI;AAC3B,wBAAgB,GAAG,MAAM,EAAE,KAAK;AAAA,IACpC;AACF,SAAO;AACT;AACA,IAAI,gBAAgB,CAAC,KAAK,KAAK,UAAU;AACvC,kBAAgB,KAAK,OAAO,QAAQ,WAAW,MAAM,KAAK,KAAK,KAAK;AACpE,SAAO;AACT;AACA,IAAM,eAAe;AACrB,IAAM,gBAAgB;AACtB,IAAM,kBAAkB;AACxB,IAAM,yBAAyB;AAC/B,IAAM,UAAU,CAAC,UAAU;AACzB,MAAI,SAAS;AACb,MAAI,OAAO,UAAU,UAAU;AAC7B,aAAS,MAAM,KAAK;AAAA,EACtB;AACA,SAAO,CAAC;AACV;AACA,IAAM,UAAU,CAAC,UAAU;AACzB,SAAO,aAAa,KAAK,KAAK;AAChC;AACA,IAAM,sBAAsB,CAAC,OAAO,QAAQ;AAC1C,SAAO,MAAM,SAAS;AACxB;AACA,IAAM,sBAAsB,CAAC,OAAO,QAAQ;AAC1C,SAAO,MAAM,SAAS;AACxB;AACA,IAAM,WAAW,CAAC,UAAU;AAC1B,SAAO,cAAc,KAAK,KAAK;AACjC;AACA,IAAM,aAAa,CAAC,UAAU;AAC5B,SAAO,gBAAgB,KAAK,KAAK;AACnC;AACA,IAAM,mBAAmB,CAAC,UAAU;AAClC,SAAO,uBAAuB,KAAK,KAAK;AAC1C;AACA,IAAM,sBAAsB,CAAC,OAAO,QAAQ;AAC1C,SAAO,QAAQ;AACjB;AACA,IAAM,sBAAsB,CAAC,OAAO,QAAQ;AAC1C,SAAO,QAAQ;AACjB;AACA,IAAI,SAAyB,CAAC,WAAW;AACvC,SAAO,cAAc;AACrB,SAAO,WAAW;AAClB,SAAO,eAAe;AACtB,SAAO,eAAe;AACtB,SAAO,cAAc;AACrB,SAAO,YAAY;AACnB,SAAO,eAAe;AACtB,SAAO,eAAe;AACtB,SAAO,oBAAoB;AAC3B,SAAO,kBAAkB;AACzB,SAAO,mBAAmB;AAC1B,SAAO,mBAAmB;AAC1B,SAAO,WAAW;AAClB,SAAO;AACT,GAAG,SAAS,CAAC,CAAC;AACd,IAAI,cAA8B,CAAC,gBAAgB;AACjD,cAAY,cAAc;AAC1B,SAAO;AACT,GAAG,cAAc,CAAC,CAAC;AACnB,IAAI,qBAAqC,CAAC,uBAAuB;AAC/D,qBAAmB,WAAW;AAC9B,qBAAmB,gBAAgB;AACnC,SAAO;AACT,GAAG,qBAAqB,CAAC,CAAC;AAC1B,IAAM,yBAAyB,CAAC,MAAM,cAAc;AAClD,UAAQ,MAAM;AAAA,IACZ,KAAK,MAAM;AACT,aAAO;AAAA,IACT,KAAK,MAAM;AACT,aAAO;AAAA,IACT,KAAK,MAAM;AACT,aAAO,wDAAwD,QAAQ,UAAU,OAAO,SAAS,CAAC;AAAA,IACpG,KAAK,MAAM;AACT,aAAO,wDAAwD,QAAQ,UAAU,OAAO,SAAS,CAAC;AAAA,IACpG,KAAK,MAAM;AACT,aAAO;AAAA,IACT,KAAK,MAAM;AACT,aAAO;AAAA,IACT,KAAK,MAAM;AACT,aAAO;AAAA,IACT,KAAK,MAAM;AACT,aAAO,6CAA6C,QAAQ,UAAU,OAAO,SAAS,CAAC;AAAA,IACzF,KAAK,MAAM;AACT,aAAO,6CAA6C,QAAQ,UAAU,OAAO,SAAS,CAAC;AAAA,IACzF,KAAK,MAAM;AACT,aAAO,kDAAkD,QAAQ,UAAU,OAAO,SAAS,CAAC;AAAA,IAC9F,KAAK,MAAM;AACT,aAAO,kDAAkD,QAAQ,UAAU,OAAO,SAAS,CAAC;AAAA,IAC9F,KAAK,MAAM;AACT,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AACA,IAAM,yBAAyB,CAAC,SAAS;AACvC,UAAQ,MAAM;AAAA,IACZ,KAAK,WAAW;AACd,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AACA,IAAM,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,OAAO,IAAI,SAAS;AACxD,IAAM,iBAAiB,CAAC,OAAO;AAC7B,MAAI,OAAO;AACX,QAAM,MAAM,CAAC;AACb,SAAO,MAAM;AACX,QAAI,QAAQ,IAAI;AAChB,WAAO,KAAK;AAAA,EACd;AACA,SAAO;AACT;AACA,IAAM,mBAAmB,CAAC,QAAQ,YAAY;AAC5C,QAAM,kBAAkB,CAAC,GAAG,OAAO,EAAE,QAAQ;AAC7C,WAAS,IAAI,GAAG,MAAM,gBAAgB,QAAQ,IAAI,KAAK,EAAE,GAAG;AAC1D,UAAM,SAAS,gBAAgB;AAC/B,eAAW,OAAO,QAAQ;AACxB,YAAM,QAAQ,OAAO;AACrB,UAAI,MAAM,cAAc,QAAQ;AAC9B,eAAO,CAAC,KAAK,KAAK;AAAA,MACpB;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAM,eAAe,CAAC,cAAc;AAClC,MAAI,MAAM,QAAQ,SAAS,GAAG;AAC5B,WAAO,UAAU,OAAO,CAAC,QAAQ,IAAI,SAAS,CAAC;AAAA,EACjD;AACA,MAAI,OAAO,cAAc,YAAY,UAAU,KAAK,GAAG;AACrD,WAAO,CAAC,GAAG,UAAU,MAAM,GAAG,EAAE,OAAO,CAAC,QAAQ,IAAI,SAAS,CAAC,CAAC;AAAA,EACjE;AACA,SAAO,CAAC;AACV;AACA,IAAM,gBAAgB;AACtB,IAAM,uBAAuB;AAC7B,IAAM,sBAAsB;AAAA,EAC1B,iBAAiB;AAAA,IACf,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AAAA,EACA,oBAAoB;AAAA,EACpB,sBAAsB;AAAA,EACtB,iBAAiB;AAAA,IACf,OAAO;AAAA,EACT;AAAA,EACA,oBAAoB;AAAA,EACpB,sBAAsB;AAAA,EACtB,mBAAmB;AAAA,EACnB,UAAU;AAAA,EACV,aAAa;AACf;AACA,IAAM,eAAN,MAAmB;AAAA,EACjB,YAAY,MAAM,cAAc,YAAY;AAC1C,kBAAc,MAAM,QAAQ,IAAI;AAChC,kBAAc,MAAM,UAAU,CAAC,CAAC;AAChC,kBAAc,MAAM,eAAe,CAAC,CAAC;AACrC,kBAAc,MAAM,UAAU,CAAC,CAAC;AAChC,kBAAc,MAAM,WAAW,KAAK;AACpC,kBAAc,MAAM,eAAe,KAAK;AACxC,kBAAc,MAAM,gBAAgB,mBAAmB;AACvD,kBAAc,MAAM,eAAe,CAAC,CAAC;AACrC,kBAAc,MAAM,iBAAiB,CAAC,CAAC;AACvC,kBAAc,MAAM,kBAAkB,CAAC,CAAC;AACxC,kBAAc,MAAM,cAAc,CAAC,CAAC;AACpC,kBAAc,MAAM,eAAe;AACnC,kBAAc,MAAM,mBAAmB,CAAC,CAAC;AACzC,kBAAc,MAAM,mBAAmB;AACvC,kBAAc,MAAM,gBAAgB;AACpC,kBAAc,MAAM,YAAY,CAAC,CAAC;AAClC,kBAAc,MAAM,oBAAoB;AACxC,kBAAc,MAAM,cAAc;AAClC,kBAAc,MAAM,sBAAsB,MAAM;AAC9C,WAAK,SAAS,QAAQ,CAAC,SAAS;AAC9B,aAAK,QAAQ;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AACD,kBAAc,MAAM,wBAAwB,MAAM;AAChD,WAAK,qBAAqB,OAAO;AACjC,UAAI,CAAC,KAAK,cAAc;AACtB,eAAO,sBAAsB,MAAM;AACjC,eAAK,mBAAmB;AACxB,eAAK,eAAe;AAAA,QACtB,CAAC;AACD,aAAK,eAAe;AAAA,MACtB;AAAA,IACF,CAAC;AACD,kBAAc,MAAM,qBAAqB,CAAC,OAAO;AAC/C,SAAG,eAAe;AAClB,WAAK,cAAc;AACnB,WAAK,gBAAgB,EAAE;AAAA,IACzB,CAAC;AACD,kBAAc,MAAM,qBAAqB,CAAC,WAAW;AACnD,UAAI;AACJ,iBAAW,aAAa,KAAK,QAAQ;AACnC,cAAM,QAAQ,KAAK,OAAO;AAC1B,YAAI,MAAM,SAAS,QAAQ;AACzB,6BAAmB;AACnB;AAAA,QACF;AAAA,MACF;AACA,UAAI,CAAC,kBAAkB;AACrB;AAAA,MACF;AACA,WAAK,cAAc,kBAAkB,IAAI;AAAA,IAC3C,CAAC;AACD,kBAAc,MAAM,qBAAqB,CAAC,WAAW;AACnD,UAAI;AACJ,UAAI;AACJ,iBAAW,aAAa,KAAK,aAAa;AACxC,cAAM,QAAQ,KAAK,YAAY;AAC/B,YAAI,MAAM,MAAM,KAAK,CAAC,SAAS,SAAS,MAAM,GAAG;AAC/C,yBAAe;AACf,6BAAmB;AACnB;AAAA,QACF;AAAA,MACF;AACA,UAAI,CAAC,gBAAgB,CAAC,kBAAkB;AACtC;AAAA,MACF;AACA,WAAK,cAAc,kBAAkB,YAAY;AAAA,IACnD,CAAC;AACD,kBAAc,MAAM,iBAAiB,CAAC,OAAO;AAC3C,UAAI,CAAC,GAAG,QAAQ;AACd;AAAA,MACF;AACA,WAAK,kBAAkB,GAAG,MAAM;AAChC,WAAK,kBAAkB,GAAG,MAAM;AAChC,WAAK,aAAa;AAAA,IACpB,CAAC;AACD,SAAK,WAAW,MAAM,cAAc,UAAU;AAAA,EAChD;AAAA,EACA,WAAW,MAAM,cAAc,YAAY;AACzC,SAAK,OAAO;AACZ,SAAK,SAAS,CAAC;AACf,SAAK,UAAU;AACf,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,cAAc,CAAC;AACpB,SAAK,gBAAgB,CAAC;AACtB,SAAK,iBAAiB,CAAC;AACvB,SAAK,kBAAkB,CAAC;AACxB,SAAK,WAAW,CAAC;AACjB,QAAI,OAAO,SAAS,UAAU;AAC5B,YAAM,OAAO,SAAS,cAAc,IAAI;AACxC,UAAI,CAAC,MAAM;AACT,cAAM,MAAM,aAAa,yDAAyD;AAAA,MACpF;AACA,WAAK,QAAQ,IAAI;AAAA,IACnB,WAAW,gBAAgB,iBAAiB;AAC1C,WAAK,QAAQ,IAAI;AAAA,IACnB,OAAO;AACL,YAAM,MAAM,gFAAgF;AAAA,IAC9F;AACA,SAAK,eAAe,eAAe,eAAe,CAAC,GAAG,mBAAmB,GAAG,YAAY;AACxF,QAAI,YAAY;AACd,WAAK,aAAa;AAAA,IACpB;AACA,QAAI,KAAK,UAAU,GAAG;AACpB,YAAM,WAAW,SAAS,cAAc,OAAO;AAC/C,eAAS,cAAc;AACvB,WAAK,gBAAgB,kBAAkB,SAAS,SAAS,KAAK,YAAY,QAAQ;AAClF,WAAK,YAAY,UAAU,UAAU,KAAK,oBAAoB;AAAA,IAChE;AAAA,EACF;AAAA,EACA,mBAAmB,KAAK;AACtB,QAAI;AACJ,QAAI,CAAC,KAAK,iBAAiB,CAAC,KAAK,WAAW,QAAQ;AAClD,aAAO;AAAA,IACT;AACA,UAAM,gBAAgB,KAAK,KAAK,WAAW,KAAK,CAAC,SAAS,KAAK,QAAQ,GAAG,MAAM,OAAO,SAAS,GAAG,KAAK,KAAK;AAC7G,WAAO,gBAAgB;AAAA,EACzB;AAAA,EACA,qBAAqB,WAAW,MAAM;AACpC,UAAM,MAAM,OAAO,UAAU,iBAAiB,aAAa,UAAU,aAAa,KAAK,aAAa,IAAI,GAAG,KAAK,MAAM,IAAI,UAAU;AACpI,WAAO,KAAK,mBAAmB,GAAG,KAAK,uBAAuB,UAAU,MAAM,UAAU,KAAK;AAAA,EAC/F;AAAA,EACA,uBAAuB,gBAAgB,MAAM;AAC3C,UAAM,MAAM,OAAO,mBAAmB,aAAa,eAAe,KAAK,aAAa,IAAI,GAAG,KAAK,MAAM,IAAI;AAC1G,WAAO,KAAK,mBAAmB,GAAG;AAAA,EACpC;AAAA,EACA,qBAAqB,WAAW;AAC9B,WAAO,KAAK,mBAAmB,UAAU,YAAY,KAAK,uBAAuB,UAAU,IAAI;AAAA,EACjG;AAAA,EACA,uBAAuB,WAAW;AAChC,WAAO,KAAK,mBAAmB,UAAU,cAAc;AAAA,EACzD;AAAA,EACA,gBAAgB,OAAO,WAAW;AAChC,SAAK,OAAO,OAAO,UAAU;AAC7B,SAAK,OAAO,OAAO,eAAe,KAAK,qBAAqB,WAAW,KAAK,OAAO,OAAO,IAAI;AAAA,EAChG;AAAA,EACA,cAAc,OAAO,gBAAgB;AACnC,SAAK,OAAO,OAAO,UAAU;AAC7B,QAAI,mBAAmB,QAAQ;AAC7B,WAAK,OAAO,OAAO,iBAAiB,KAAK,uBAAuB,gBAAgB,KAAK,OAAO,OAAO,IAAI;AAAA,IACzG;AAAA,EACF;AAAA,EACA,gBAAgB,WAAW,WAAW;AACpC,SAAK,YAAY,WAAW,UAAU;AACtC,SAAK,YAAY,WAAW,eAAe,KAAK,qBAAqB,SAAS;AAAA,EAChF;AAAA,EACA,cAAc,WAAW,WAAW;AAClC,SAAK,YAAY,WAAW,UAAU;AACtC,SAAK,YAAY,WAAW,iBAAiB,KAAK,uBAAuB,SAAS;AAAA,EACpF;AAAA,EACA,aAAa,MAAM;AACjB,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AACH,eAAO,KAAK;AAAA,MACd,KAAK;AACH,eAAO,KAAK;AAAA,MACd;AACE,eAAO,KAAK;AAAA,IAChB;AAAA,EACF;AAAA,EACA,kBAAkB,WAAW,OAAO,WAAW;AAC7C,YAAQ,UAAU,MAAM;AAAA,MACtB,KAAK,WAAW,UAAU;AACxB,YAAI,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,OAAO,GAAG;AACxC,eAAK,gBAAgB,WAAW,SAAS;AAAA,QAC3C,OAAO;AACL,eAAK,cAAc,WAAW,SAAS;AAAA,QACzC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,kBAAkB,OAAO,MAAM,WAAW,oBAAoB,OAAO;AACnE,UAAM,YAAY,UAAU;AAC5B,UAAM,YAAY,KAAK,aAAa,IAAI;AACxC,QAAI,UAAU,QAAQ;AACpB,YAAM,SAAS,UAAU,OAAO,WAAW,KAAK,MAAM;AACtD,UAAI,CAAC,QAAQ;AACX,aAAK,gBAAgB,OAAO,SAAS;AAAA,MACvC;AACA;AAAA,IACF;AACA,YAAQ,UAAU,MAAM;AAAA,MACtB,KAAK,MAAM,UAAU;AACnB,YAAI,QAAQ,SAAS,GAAG;AACtB,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,OAAO;AAChB,YAAI,OAAO,cAAc,UAAU;AACjC,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,CAAC,QAAQ,SAAS,GAAG;AACvB,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,WAAW;AACpB,YAAI,cAAc,QAAQ;AACxB,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,gEAAgE;AACvH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,8DAA8D;AACrH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,cAAc,IAAI;AACpB;AAAA,QACF;AACA,YAAI,oBAAoB,WAAW,SAAS,GAAG;AAC7C,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,WAAW;AACpB,YAAI,cAAc,QAAQ;AACxB,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,gEAAgE;AACvH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,8DAA8D;AACrH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,cAAc,IAAI;AACpB;AAAA,QACF;AACA,YAAI,oBAAoB,WAAW,SAAS,GAAG;AAC7C,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,UAAU;AACnB,YAAI,OAAO,cAAc,UAAU;AACjC,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,cAAc,IAAI;AACpB;AAAA,QACF;AACA,YAAI,CAAC,WAAW,SAAS,GAAG;AAC1B,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,gBAAgB;AACzB,YAAI,OAAO,cAAc,UAAU;AACjC,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,cAAc,IAAI;AACpB;AAAA,QACF;AACA,YAAI,CAAC,iBAAiB,SAAS,GAAG;AAChC,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,QAAQ;AACjB,YAAI,OAAO,cAAc,UAAU;AACjC,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,cAAc,IAAI;AACpB;AAAA,QACF;AACA,YAAI,CAAC,SAAS,SAAS,GAAG;AACxB,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,WAAW;AACpB,YAAI,cAAc,QAAQ;AACxB,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,gEAAgE;AACvH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,oEAAoE;AAC3H,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,cAAc,IAAI;AACpB;AAAA,QACF;AACA,cAAM,MAAM,CAAC;AACb,YAAI,OAAO,MAAM,GAAG,KAAK,oBAAoB,KAAK,SAAS,GAAG;AAC5D,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,WAAW;AACpB,YAAI,cAAc,QAAQ;AACxB,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,gEAAgE;AACvH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,oEAAoE;AAC3H,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,cAAc,IAAI;AACpB;AAAA,QACF;AACA,cAAM,MAAM,CAAC;AACb,YAAI,OAAO,MAAM,GAAG,KAAK,oBAAoB,KAAK,SAAS,GAAG;AAC5D,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,cAAc;AACvB,YAAI,cAAc,QAAQ;AACxB,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,iEAAiE;AACxH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI;AACJ,YAAI;AACF,mBAAS,IAAI,OAAO,SAAS;AAAA,QAC/B,SAAS,GAAP;AACA,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,qEAAqE;AAC5H,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,cAAM,MAAM,OAAO,SAAS;AAC5B,YAAI,QAAQ,MAAM,CAAC,OAAO,KAAK,GAAG,GAAG;AACnC,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,eAAe;AACxB,YAAI,cAAc,QAAQ;AACxB,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,iEAAiE;AACxH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,oEAAoE;AAC3H,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,SAAS,aAAa,OAAO,SAAS,UAAU,MAAM,KAAK,UAAU,SAAS,WAAW;AAClG,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,eAAe;AACxB,YAAI,cAAc,QAAQ;AACxB,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,iEAAiE;AACxH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,oEAAoE;AAC3H,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,SAAS,aAAa,OAAO,SAAS,UAAU,MAAM,KAAK,UAAU,SAAS,WAAW;AAClG,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA;AAAA,MACF;AAAA,MACA,KAAK,MAAM,OAAO;AAChB,YAAI,cAAc,QAAQ;AACxB,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,iEAAiE;AACxH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,sEAAsE;AAC7H,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,cAAM,cAAc,UAAU;AAC9B,YAAI,OAAO,gBAAgB,UAAU;AACnC,kBAAQ,MAAM,aAAa,UAAU,kBAAkB,uFAAuF;AAC9I,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,cAAM,qBAAqB,CAAC,MAAM,eAAe;AAC/C,gBAAM,iBAAiB,OAAO,SAAS,WAAW,OAAO,KAAK,KAAK,OAAO,WAAW;AACrF,gBAAM,iBAAiB,OAAO,SAAS,WAAW,OAAO,KAAK,KAAK,OAAO,WAAW;AACrF,gBAAM,cAAc,MAAM,QAAQ,WAAW,KAAK,KAAK,CAAC,WAAW,MAAM,SAAS,KAAK,IAAI;AAC3F,gBAAM,aAAa,MAAM,QAAQ,WAAW,UAAU,KAAK,CAAC,WAAW,WAAW,SAAS,KAAK,KAAK,MAAM,GAAG,EAAE,KAAK,KAAK,MAAM,GAAG,EAAE,SAAS,EAAE;AAChJ,gBAAM,cAAc,MAAM,QAAQ,WAAW,KAAK,KAAK,CAAC,WAAW,MAAM,SAAS,KAAK,IAAI;AAC3F,iBAAO,kBAAkB,kBAAkB,eAAe,cAAc;AAAA,QAC1E;AACA,YAAI,OAAO,cAAc,YAAY,cAAc,MAAM;AACvD,mBAAS,UAAU,GAAG,MAAM,UAAU,QAAQ,UAAU,KAAK,EAAE,SAAS;AACtE,kBAAM,OAAO,UAAU,KAAK,OAAO;AACnC,gBAAI,CAAC,MAAM;AACT,mBAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,YACF;AACA,kBAAM,eAAe,mBAAmB,MAAM,WAAW;AACzD,gBAAI,cAAc;AAChB,mBAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA;AAAA,MACF;AAAA,MACA,SAAS;AACP,YAAI,OAAO,UAAU,cAAc,YAAY;AAC7C,kBAAQ,MAAM,kCAAkC,uEAAuE;AACvH,eAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,QACF;AACA,cAAM,SAAS,UAAU,UAAU,WAAW,KAAK,MAAM;AACzD,YAAI,OAAO,WAAW,aAAa,OAAO,WAAW,YAAY;AAC/D,kBAAQ,MAAM,+BAA+B,yEAAyE;AAAA,QACxH;AACA,YAAI,OAAO,WAAW,YAAY;AAChC,cAAI,mBAAmB;AACrB,iBAAK,OAAO,OAAO,oBAAoB;AAAA,UACzC,OAAO;AACL,iBAAK,OAAO,OAAO,oBAAoB;AACvC,kBAAM,UAAU,OAAO;AACvB,gBAAI,CAAC,UAAU,OAAO,GAAG;AACvB,sBAAQ,MAAM,2CAA2C,0EAA0E;AACnI,mBAAK,gBAAgB,OAAO,SAAS;AACrC;AAAA,YACF;AACA,mBAAO,QAAQ,KAAK,CAAC,SAAS;AAC5B,kBAAI,CAAC,MAAM;AACT,qBAAK,gBAAgB,OAAO,SAAS;AAAA,cACvC;AAAA,YACF,CAAC,EAAE,MAAM,MAAM;AACb,mBAAK,gBAAgB,OAAO,SAAS;AAAA,YACvC,CAAC;AAAA,UACH;AAAA,QACF;AACA,YAAI,CAAC,QAAQ;AACX,eAAK,gBAAgB,OAAO,SAAS;AAAA,QACvC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,cAAc,WAAW,oBAAoB,OAAO;AAClD,QAAI;AACJ,UAAM,QAAQ,KAAK,OAAO;AAC1B,UAAM,UAAU;AAChB,UAAM,WAAW,CAAC;AAClB,KAAC,GAAG,MAAM,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,SAAS;AAC3C,YAAM,MAAM,KAAK,kBAAkB,WAAW,MAAM,MAAM,MAAM,iBAAiB;AACjF,UAAI,UAAU,GAAG,GAAG;AAClB,iBAAS,KAAK,GAAG;AAAA,MACnB;AAAA,IACF,CAAC;AACD,QAAI,MAAM,SAAS;AACjB,WAAK,cAAc,YAAY,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,cAAc;AAAA,IACxF;AACA,WAAO,QAAQ,WAAW,QAAQ;AAAA,EACpC;AAAA,EACA,gBAAgB,OAAO;AACrB,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,MAAM,gEAAgE;AAAA,IAC9E;AACA,QAAI,CAAC,KAAK,OAAO,QAAQ;AACvB,cAAQ,MAAM,4CAA4C;AAC1D,aAAO,QAAQ,OAAO;AAAA,IACxB;AACA,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,WAAK,cAAc,OAAO,IAAI,EAAE,QAAQ,MAAM;AAC5C,aAAK,gBAAgB,KAAK;AAC1B,aAAK,gBAAgB,KAAK;AAC1B,aAAK,iBAAiB,KAAK;AAC3B,gBAAQ,CAAC,CAAC,KAAK,OAAO,OAAO,OAAO;AAAA,MACtC,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,cAAc,WAAW,OAAO;AAC9B,UAAM,WAAW,CAAC;AAClB,KAAC,GAAG,MAAM,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,SAAS;AAC3C,YAAM,MAAM,KAAK,kBAAkB,WAAW,MAAM,OAAO,IAAI;AAC/D,UAAI,UAAU,GAAG,GAAG;AAClB,iBAAS,KAAK,GAAG;AAAA,MACnB;AAAA,IACF,CAAC;AACD,WAAO,QAAQ,WAAW,QAAQ;AAAA,EACpC;AAAA,EACA,oBAAoB;AAClB,eAAW,aAAa,KAAK,QAAQ;AACnC,YAAM,QAAQ,KAAK,OAAO;AAC1B,UAAI,CAAC,MAAM,SAAS;AAClB,mBAAW,MAAM,MAAM,KAAK,MAAM,GAAG,CAAC;AACtC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,sBAAsB,oBAAoB,OAAO;AAC/C,SAAK,aAAa,iBAAiB;AACnC,QAAI,KAAK,aAAa,mBAAmB;AACvC,WAAK,kBAAkB;AAAA,IACzB;AAAA,EACF;AAAA,EACA,SAAS,oBAAoB,OAAO;AAClC,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,YAAM,WAAW,CAAC;AAClB,aAAO,KAAK,KAAK,MAAM,EAAE,QAAQ,CAAC,cAAc;AAC9C,cAAM,UAAU,KAAK,cAAc,SAAS;AAC5C,YAAI,UAAU,OAAO,GAAG;AACtB,mBAAS,KAAK,OAAO;AAAA,QACvB;AAAA,MACF,CAAC;AACD,aAAO,KAAK,KAAK,WAAW,EAAE,QAAQ,CAAC,cAAc;AACnD,cAAM,QAAQ,KAAK,YAAY;AAC/B,cAAM,UAAU,KAAK,cAAc,WAAW,KAAK;AACnD,YAAI,UAAU,OAAO,GAAG;AACtB,mBAAS,KAAK,OAAO;AAAA,QACvB;AAAA,MACF,CAAC;AACD,UAAI,SAAS,QAAQ;AACnB,gBAAQ,WAAW,QAAQ,EAAE,KAAK,MAAM;AACtC,eAAK,sBAAsB,iBAAiB;AAC5C,kBAAQ,IAAI;AAAA,QACd,CAAC;AAAA,MACH,OAAO;AACL,aAAK,sBAAsB,iBAAiB;AAC5C,gBAAQ,KAAK;AAAA,MACf;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,aAAa;AACX,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,WAAK,gBAAgB,QAAQ,IAAI,EAAE,QAAQ,MAAM;AAC/C,YAAI,KAAK,aAAa,mBAAmB;AACvC,eAAK,kBAAkB;AAAA,QACzB;AACA,gBAAQ,KAAK,OAAO;AAAA,MACtB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,gBAAgB,IAAI,oBAAoB,OAAO;AAC7C,QAAI,KAAK,aAAa,UAAU;AAC9B,WAAK,SAAS;AAAA,IAChB;AACA,WAAO,KAAK,SAAS,iBAAiB,EAAE,QAAQ,MAAM;AACpD,UAAI,IAAI;AACR,UAAI,KAAK,aAAa,UAAU;AAC9B,aAAK,WAAW;AAAA,MAClB;AACA,UAAI,KAAK,SAAS;AAChB,SAAC,KAAK,KAAK,sBAAsB,OAAO,SAAS,GAAG,KAAK,MAAM,EAAE;AAAA,MACnE,OAAO;AACL,SAAC,KAAK,KAAK,mBAAmB,OAAO,SAAS,GAAG,KAAK,MAAM,KAAK,QAAQ,KAAK,WAAW;AAAA,MAC3F;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,QAAQ,MAAM;AACZ,SAAK,OAAO;AACZ,SAAK,KAAK,aAAa,cAAc,YAAY;AACjD,SAAK,eAAe,UAAU,KAAK,MAAM,KAAK,iBAAiB;AAC/D,SAAK,YAAY,UAAU,KAAK,MAAM,KAAK,iBAAiB;AAAA,EAC9D;AAAA,EACA,YAAY,MAAM,MAAM,SAAS;AAC/B,SAAK,iBAAiB,MAAM,OAAO;AACnC,SAAK,eAAe,KAAK,EAAE,MAAM,MAAM,MAAM,QAAQ,CAAC;AAAA,EACxD;AAAA,EACA,eAAe,MAAM,MAAM,SAAS;AAClC,SAAK,oBAAoB,MAAM,OAAO;AACtC,SAAK,iBAAiB,KAAK,eAAe,OAAO,CAAC,SAAS,KAAK,SAAS,QAAQ,KAAK,SAAS,IAAI;AAAA,EACrG;AAAA,EACA,SAAS,OAAO,OAAO,QAAQ;AAC7B,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,MAAM,gEAAgE;AAAA,IAC9E;AACA,UAAM,OAAO,KAAK,KAAK,cAAc,KAAK;AAC1C,QAAI,CAAC,MAAM;AACT,YAAM,MAAM,cAAc,4DAA4D;AAAA,IACxF;AACA,QAAI,CAAC,MAAM,QAAQ,KAAK,KAAK,CAAC,MAAM,QAAQ;AAC1C,YAAM,MAAM,iCAAiC,kEAAkE;AAAA,IACjH;AACA,UAAM,QAAQ,CAAC,SAAS;AACtB,UAAI,EAAE,UAAU,QAAQ,eAAe,QAAQ,YAAY,OAAO;AAChE,cAAM,MAAM,iCAAiC,8DAA8D;AAAA,MAC7G;AACA,UAAI,CAAC,KAAK,aAAa,CAAC,KAAK,WAAW,CAAC,KAAK,QAAQ,CAAC,OAAO,OAAO,KAAK,EAAE,SAAS,KAAK,IAAI,IAAI;AAChG,cAAM,MAAM,sCAAsC,OAAO,OAAO,KAAK,EAAE,KAAK,IAAI,sBAAsB,KAAK,MAAM;AAAA,MACnH;AAAA,IACF,CAAC;AACD,SAAK,OAAO,SAAS;AAAA,MACnB;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACF;AACA,SAAK,aAAa,IAAI;AACtB,QAAI,KAAK,aAAa;AACpB,WAAK,SAAS;AAAA,IAChB;AACA,WAAO;AAAA,EACT;AAAA,EACA,YAAY,OAAO;AACjB,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,MAAM,gEAAgE;AAAA,IAC9E;AACA,QAAI,CAAC,KAAK,OAAO,QAAQ;AACvB,cAAQ,MAAM,4CAA4C;AAC1D,aAAO;AAAA,IACT;AACA,UAAM,OAAO,KAAK,gBAAgB,KAAK,OAAO,OAAO,KAAK,IAAI;AAC9D,SAAK,eAAe,MAAM,KAAK,OAAO,OAAO,MAAM,KAAK,aAAa;AACrE,SAAK,YAAY;AACjB,WAAO,KAAK,OAAO;AACnB,WAAO;AAAA,EACT;AAAA,EACA,YAAY,OAAO;AACjB,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,MAAM,gEAAgE;AAAA,IAC9E;AACA,QAAI,CAAC,KAAK,YAAY,QAAQ;AAC5B,cAAQ,MAAM,4CAA4C;AAC1D,aAAO;AAAA,IACT;AACA,SAAK,YAAY,OAAO,MAAM,QAAQ,CAAC,SAAS;AAC9C,YAAM,OAAO,KAAK,gBAAgB,KAAK,IAAI;AAC3C,WAAK,eAAe,MAAM,MAAM,KAAK,aAAa;AAAA,IACpD,CAAC;AACD,SAAK,YAAY;AACjB,WAAO,KAAK,YAAY;AACxB,WAAO;AAAA,EACT;AAAA,EACA,iBAAiB,YAAY,cAAc,QAAQ,gBAAgB;AACjE,QAAI,OAAO,eAAe,UAAU;AAClC,YAAM,MAAM,gEAAgE;AAAA,IAC9E;AACA,UAAM,OAAO,KAAK,KAAK,cAAc,UAAU;AAC/C,QAAI,CAAC,MAAM;AACT,YAAM,MAAM,cAAc,iEAAiE;AAAA,IAC7F;AACA,UAAM,SAAS,KAAK,iBAAiB,OAAO;AAC5C,UAAM,iBAAiB,MAAM,KAAK,MAAM,EAAE,OAAO,CAAC,UAAU;AAC1D,YAAM,SAAS,iBAAiB,KAAK,aAAa,eAAe,KAAK,CAAC;AACvE,UAAI,CAAC,QAAQ;AACX,eAAO;AAAA,MACT;AACA,aAAO,OAAO,GAAG,MAAM,KAAK,CAAC,UAAU,UAAU,KAAK;AAAA,IACxD,CAAC;AACD,SAAK,YAAY,cAAc;AAAA,MAC7B,OAAO;AAAA,QACL;AAAA,UACE,MAAM,WAAW;AAAA,UACjB;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,MACA,WAAW;AAAA,MACX,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT;AAAA,IACF;AACA,WAAO,QAAQ,CAAC,UAAU;AACxB,WAAK,aAAa,KAAK;AAAA,IACzB,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,gBAAgB,MAAM;AACpB,YAAQ,MAAM;AAAA,MACZ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,SAAS;AACZ,eAAO;AAAA,MACT;AAAA,MACA,SAAS;AACP,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA,EACA,aAAa,MAAM;AACjB,UAAM,OAAO,KAAK,gBAAgB,KAAK,IAAI;AAC3C,SAAK,eAAe,MAAM,MAAM,KAAK,aAAa;AAClD,SAAK,YAAY,MAAM,MAAM,KAAK,aAAa;AAAA,EACjD;AAAA,EACA,gBAAgB,WAAW;AACzB,QAAI,IAAI;AACR,KAAC,KAAK,KAAK,YAAY,eAAe,OAAO,SAAS,GAAG,OAAO;AAChE,KAAC,KAAK,KAAK,cAAc,eAAe,OAAO,SAAS,GAAG,OAAO;AAAA,EACpE;AAAA,EACA,gBAAgB,WAAW;AACzB,QAAI,IAAI,IAAI,IAAI;AAChB,UAAM,QAAQ,KAAK,OAAO;AAC1B,UAAM,eAAe,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,oBAAoB,KAAK,aAAa;AACpG,WAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,QAAQ;AACvC,YAAM,KAAK,MAAM,OAAO;AAAA,IAC1B,CAAC;AACD,UAAM,iBAAiB,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,sBAAsB,KAAK,aAAa,qBAAqB,CAAC;AAC9H,WAAO,KAAK,YAAY,EAAE,QAAQ,CAAC,QAAQ;AACzC,YAAM,KAAK,MAAM,OAAO;AAAA,IAC1B,CAAC;AACD,UAAM,KAAK,UAAU,OAAO,GAAG,eAAe,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,uBAAuB,KAAK,aAAa,kBAAkB,GAAG,GAAG,eAAe,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,yBAAyB,KAAK,aAAa,oBAAoB,CAAC;AAAA,EAClR;AAAA,EACA,cAAc;AACZ,QAAI,IAAI;AACR,WAAO,KAAK,KAAK,WAAW,EAAE,QAAQ,CAAC,QAAQ,KAAK,YAAY,KAAK,OAAO,CAAC;AAC7E,WAAO,KAAK,KAAK,aAAa,EAAE,QAAQ,CAAC,QAAQ,KAAK,cAAc,KAAK,OAAO,CAAC;AACjF,eAAW,aAAa,KAAK,QAAQ;AACnC,WAAK,gBAAgB,SAAS;AAAA,IAChC;AACA,eAAW,aAAa,KAAK,aAAa;AACxC,YAAM,QAAQ,KAAK,YAAY;AAC/B,YAAM,eAAe,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,oBAAoB,KAAK,aAAa;AACpG,aAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,QAAQ;AACvC,cAAM,MAAM,QAAQ,CAAC,SAAS;AAC5B,cAAI;AACJ,eAAK,MAAM,OAAO;AAClB,eAAK,UAAU,OAAO,GAAG,eAAe,MAAM,MAAM,WAAW,OAAO,SAAS,IAAI,uBAAuB,KAAK,aAAa,kBAAkB,CAAC;AAAA,QACjJ,CAAC;AAAA,MACH,CAAC;AACD,YAAM,iBAAiB,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,sBAAsB,KAAK,aAAa,qBAAqB,CAAC;AAC9H,aAAO,KAAK,YAAY,EAAE,QAAQ,CAAC,QAAQ;AACzC,cAAM,MAAM,QAAQ,CAAC,SAAS;AAC5B,cAAI;AACJ,eAAK,MAAM,OAAO;AAClB,eAAK,UAAU,OAAO,GAAG,eAAe,MAAM,MAAM,WAAW,OAAO,SAAS,IAAI,yBAAyB,KAAK,aAAa,oBAAoB,CAAC;AAAA,QACrJ,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AACA,SAAK,WAAW,CAAC;AAAA,EACnB;AAAA,EACA,YAAY;AACV,WAAO,CAAC,CAAC,KAAK,aAAa;AAAA,EAC7B;AAAA,EACA,WAAW;AACT,UAAM,QAAQ,KAAK,KAAK,iBAAiB,iCAAiC;AAC1E,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,EAAE,GAAG;AAChD,YAAM,GAAG,aAAa,wCAAwC,MAAM,GAAG,WAAW,SAAS,OAAO;AAClG,YAAM,GAAG,aAAa,YAAY,UAAU;AAC5C,YAAM,GAAG,MAAM,gBAAgB;AAC/B,YAAM,GAAG,MAAM,eAAe;AAC9B,YAAM,GAAG,MAAM,SAAS;AAAA,IAC1B;AAAA,EACF;AAAA,EACA,aAAa;AACX,UAAM,QAAQ,KAAK,KAAK,iBAAiB,iCAAiC;AAC1E,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,EAAE,GAAG;AAChD,UAAI,MAAM,GAAG,aAAa,sCAAsC,MAAM,QAAQ;AAC5E,cAAM,GAAG,gBAAgB,UAAU;AAAA,MACrC;AACA,YAAM,GAAG,MAAM,gBAAgB;AAC/B,YAAM,GAAG,MAAM,eAAe;AAC9B,YAAM,GAAG,MAAM,SAAS;AAAA,IAC1B;AAAA,EACF;AAAA,EACA,cAAc,MAAM,YAAY,UAAU;AACxC,QAAI;AACJ,UAAM,EAAE,KAAK,MAAM,OAAO,OAAO,IAAI,KAAK,sBAAsB;AAChE,UAAM,iBAAiB,WAAW,sBAAsB;AACxD,UAAM,MAAM,cAAc,KAAK,KAAK,aAAa,YAAY,OAAO,SAAS,GAAG;AAChF,YAAQ,KAAK;AAAA,MACX,KAAK,QAAQ;AACX,mBAAW,MAAM,MAAM,GAAG,MAAM,SAAS,IAAI,eAAe,SAAS;AACrE,mBAAW,MAAM,OAAO,GAAG,OAAO,eAAe,QAAQ;AACzD;AAAA,MACF;AAAA,MACA,KAAK,OAAO;AACV,mBAAW,MAAM,MAAM,GAAG,MAAM,eAAe,SAAS;AACxD,mBAAW,MAAM,OAAO,GAAG,OAAO,QAAQ,IAAI,eAAe,QAAQ;AACrE;AAAA,MACF;AAAA,MACA,KAAK,SAAS;AACZ,mBAAW,MAAM,MAAM,GAAG,MAAM,SAAS,IAAI,eAAe,SAAS;AACrE,mBAAW,MAAM,OAAO,GAAG,OAAO,QAAQ;AAC1C;AAAA,MACF;AAAA,MACA,KAAK,UAAU;AACb,mBAAW,MAAM,MAAM,GAAG,MAAM,SAAS;AACzC,mBAAW,MAAM,OAAO,GAAG,OAAO,QAAQ,IAAI,eAAe,QAAQ;AACrE;AAAA,MACF;AAAA,IACF;AACA,eAAW,QAAQ,YAAY;AAC/B,UAAM,UAAU,MAAM;AACpB,WAAK,cAAc,MAAM,YAAY,QAAQ;AAAA,IAC/C;AACA,WAAO;AAAA,MACL;AAAA,IACF;AAAA,EACF;AAAA,EACA,qBAAqB,MAAM,cAAc,QAAQ;AAC/C,UAAM,aAAa,SAAS,cAAc,KAAK;AAC/C,eAAW,YAAY;AACvB,UAAM,wBAAwB,KAAK,UAAU,IAAI,UAAU,OAAO,SAAS,OAAO,mBAAmB,UAAU,OAAO,SAAS,OAAO,oBAAoB,KAAK,aAAa;AAC5K,WAAO,OAAO,WAAW,OAAO,qBAAqB;AACrD,eAAW,UAAU,IAAI,GAAG,cAAc,UAAU,OAAO,SAAS,OAAO,uBAAuB,KAAK,aAAa,kBAAkB,GAAG,2BAA2B;AACpK,QAAI,KAAK,UAAU,GAAG;AACpB,iBAAW,QAAQ,UAAU;AAAA,IAC/B;AACA,QAAI,KAAK,aAAa,aAAa;AACjC,iBAAW,QAAQ,SAAS,eAAe;AAAA,IAC7C;AACA,SAAK,YAAY,QAAQ;AACzB,WAAO;AAAA,EACT;AAAA,EACA,uBAAuB,MAAM,gBAAgB,QAAQ;AACnD,QAAI,mBAAmB,QAAQ;AAC7B,aAAO;AAAA,IACT;AACA,UAAM,eAAe,SAAS,cAAc,KAAK;AACjD,iBAAa,YAAY;AACzB,UAAM,2BAA2B,UAAU,OAAO,SAAS,OAAO,sBAAsB,KAAK,aAAa;AAC1G,WAAO,OAAO,aAAa,OAAO,uBAAuB;AACzD,iBAAa,UAAU,IAAI,GAAG,cAAc,UAAU,OAAO,SAAS,OAAO,yBAAyB,KAAK,aAAa,oBAAoB,GAAG,6BAA6B;AAC5K,QAAI,KAAK,aAAa,aAAa;AACjC,mBAAa,QAAQ,SAAS,iBAAiB;AAAA,IACjD;AACA,SAAK,cAAc,QAAQ;AAC3B,WAAO;AAAA,EACT;AAAA,EACA,sBAAsB,OAAO,iBAAiB;AAC5C,UAAM,YAAY,mBAAmB,KAAK,aAAa;AACvD,QAAI,OAAO,cAAc,UAAU;AACjC,YAAM,OAAO,KAAK,KAAK,cAAc,SAAS;AAC9C,UAAI,MAAM;AACR,aAAK,YAAY,KAAK;AACtB,eAAO;AAAA,MACT,OAAO;AACL,gBAAQ,MAAM,wBAAwB,gEAAgE;AAAA,MACxG;AAAA,IACF;AACA,QAAI,qBAAqB,SAAS;AAChC,gBAAU,YAAY,KAAK;AAC3B,aAAO;AAAA,IACT;AACA,QAAI,cAAc,QAAQ;AACxB,cAAQ,MAAM,wGAAwG;AAAA,IACxH;AACA,WAAO;AAAA,EACT;AAAA,EACA,iBAAiB,MAAM,OAAO,iBAAiB,WAAW;AACxD,QAAI,CAAC,WAAW;AACd,YAAM,4BAA4B,KAAK,sBAAsB,OAAO,eAAe;AACnF,UAAI,2BAA2B;AAC7B;AAAA,MACF;AAAA,IACF;AACA,SAAK,YAAY,KAAK;AAAA,EACxB;AAAA,EACA,iBAAiB,MAAM,OAAO,iBAAiB,WAAW;AACxD,QAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAC5B,QAAI,CAAC,WAAW;AACd,YAAM,4BAA4B,KAAK,sBAAsB,OAAO,eAAe;AACnF,UAAI,2BAA2B;AAC7B;AAAA,MACF;AAAA,IACF;AACA,QAAI,KAAK,SAAS,cAAc,KAAK,SAAS,SAAS;AACrD,YAAM,YAAY,SAAS,cAAc,cAAc,KAAK,aAAa,IAAI,KAAK;AAClF,YAAM,MAAM,KAAK,KAAK,kBAAkB,OAAO,SAAS,GAAG,YAAY,OAAO,SAAS,GAAG,YAAY,OAAO,SAAS;AACpH,SAAC,MAAM,KAAK,KAAK,kBAAkB,OAAO,SAAS,GAAG,kBAAkB,OAAO,SAAS,GAAG,YAAY,KAAK;AAAA,MAC9G,WAAW,WAAW;AACpB,SAAC,KAAK,UAAU,kBAAkB,OAAO,SAAS,GAAG,YAAY,KAAK;AAAA,MACxE,OAAO;AACL,SAAC,KAAK,KAAK,kBAAkB,OAAO,SAAS,GAAG,YAAY,KAAK;AAAA,MACnE;AAAA,IACF,OAAO;AACL,OAAC,KAAK,KAAK,kBAAkB,OAAO,SAAS,GAAG,YAAY,KAAK;AAAA,IACnE;AAAA,EACF;AAAA,EACA,WAAW,QAAQ,SAAS;AAC1B,WAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,WAAW,MAAM;AAC5C,YAAM,QAAQ,OAAO;AACrB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,UAAU,CAAC;AACjB,WAAK,gBAAgB,SAAS;AAC9B,WAAK,gBAAgB,SAAS;AAC9B,WAAK,iBAAiB,WAAW,KAAK;AACtC,UAAI,MAAM,KAAK,KAAK,aAAa,mBAAmB;AAClD,mBAAW,MAAM,MAAM,KAAK,MAAM,GAAG,CAAC;AAAA,MACxC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,WAAW,QAAQ;AACjB,QAAI,OAAO,WAAW,UAAU;AAC9B,YAAM,MAAM,iEAAiE;AAAA,IAC/E;AACA,SAAK,WAAW,QAAQ,IAAI;AAAA,EAC9B;AAAA,EACA,kBAAkB,QAAQ;AACxB,QAAI,OAAO,WAAW,UAAU;AAC9B,YAAM,MAAM,wEAAwE;AAAA,IACtF;AACA,SAAK,WAAW,QAAQ,KAAK;AAAA,EAC/B;AAAA,EACA,iBAAiB,WAAW,SAAS;AACnC,QAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxB,UAAM,QAAQ,KAAK,OAAO;AAC1B,QAAI,MAAM,SAAS;AACjB,UAAI,CAAC,MAAM,mBAAmB;AAC5B,cAAM,eAAe,KAAK,uBAAuB,WAAW,YAAY,SAAS,UAAU,MAAM,gBAAgB,MAAM,MAAM;AAC7H,YAAI,cAAc;AAChB,eAAK,iBAAiB,MAAM,MAAM,eAAe,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,iBAAiB,IAAI;AAAA,QACjH;AACA,cAAM,KAAK,UAAU,IAAI,GAAG,eAAe,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,yBAAyB,KAAK,aAAa,oBAAoB,CAAC;AAAA,MACtJ;AACA;AAAA,IACF;AACA,SAAK,UAAU;AACf,UAAM,KAAK,UAAU,IAAI,GAAG,eAAe,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,uBAAuB,KAAK,aAAa,kBAAkB,CAAC;AAChJ,UAAM,aAAa,KAAK,qBAAqB,WAAW,YAAY,SAAS,UAAU,MAAM,cAAc,MAAM,MAAM;AACvH,SAAK,iBAAiB,MAAM,MAAM,aAAa,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,eAAe;AACvG,QAAI,KAAK,UAAU,GAAG;AACpB,WAAK,SAAS,KAAK,KAAK,cAAc,MAAM,MAAM,aAAa,MAAM,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,YAAY,OAAO,SAAS,GAAG,QAAQ,CAAC;AAAA,IACxJ;AAAA,EACF;AAAA,EACA,aAAa,oBAAoB,OAAO;AACtC,QAAI,IAAI,IAAI,IAAI;AAChB,QAAI,CAAC,KAAK,eAAe,CAAC,mBAAmB;AAC3C;AAAA,IACF;AACA,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,eAAW,aAAa,KAAK,aAAa;AACxC,YAAM,QAAQ,KAAK,YAAY;AAC/B,UAAI,MAAM,SAAS;AACjB,cAAM,MAAM,QAAQ,CAAC,SAAS;AAC5B,cAAI,KAAK;AACT,iBAAO,OAAO,KAAK,SAAS,MAAM,MAAM,WAAW,OAAO,SAAS,IAAI,sBAAsB,KAAK,aAAa,iBAAiB;AAChI,eAAK,UAAU,IAAI,GAAG,eAAe,MAAM,MAAM,WAAW,OAAO,SAAS,IAAI,yBAAyB,KAAK,aAAa,oBAAoB,CAAC;AAAA,QAClJ,CAAC;AACD,cAAM,eAAe,KAAK,uBAAuB,WAAW,MAAM,gBAAgB,MAAM,MAAM;AAC9F,YAAI,cAAc;AAChB,eAAK,iBAAiB,MAAM,WAAW,eAAe,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,iBAAiB,IAAI;AAAA,QACtH;AACA;AAAA,MACF;AACA,WAAK,UAAU;AACf,YAAM,MAAM,QAAQ,CAAC,SAAS;AAC5B,YAAI,KAAK;AACT,eAAO,OAAO,KAAK,SAAS,MAAM,MAAM,WAAW,OAAO,SAAS,IAAI,oBAAoB,KAAK,aAAa,eAAe;AAC5H,aAAK,UAAU,IAAI,GAAG,eAAe,MAAM,MAAM,WAAW,OAAO,SAAS,IAAI,uBAAuB,KAAK,aAAa,kBAAkB,CAAC;AAAA,MAC9I,CAAC;AACD,YAAM,aAAa,KAAK,qBAAqB,WAAW,MAAM,cAAc,MAAM,MAAM;AACxF,WAAK,iBAAiB,MAAM,WAAW,aAAa,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,eAAe;AAC5G,UAAI,KAAK,UAAU,GAAG;AACpB,aAAK,SAAS,KAAK,KAAK,cAAc,MAAM,WAAW,aAAa,MAAM,KAAK,MAAM,WAAW,OAAO,SAAS,GAAG,YAAY,OAAO,SAAS,GAAG,QAAQ,CAAC;AAAA,MAC7J;AAAA,IACF;AACA,eAAW,aAAa,KAAK,QAAQ;AACnC,WAAK,iBAAiB,SAAS;AAAA,IACjC;AAAA,EACF;AAAA,EACA,UAAU;AACR,SAAK,eAAe,QAAQ,CAAC,UAAU;AACrC,WAAK,eAAe,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,IACxD,CAAC;AACD,WAAO,KAAK,KAAK,eAAe,EAAE,QAAQ,CAAC,QAAQ;AACjD,WAAK,gBAAgB,KAAK,OAAO;AAAA,IACnC,CAAC;AACD,SAAK,YAAY;AACjB,QAAI,KAAK,aAAa,UAAU;AAC9B,WAAK,WAAW;AAAA,IAClB;AAAA,EACF;AAAA,EACA,UAAU;AACR,SAAK,QAAQ;AACb,QAAI,CAAC,KAAK,MAAM;AACd,cAAQ,MAAM,oDAAoD;AAAA,IACpE,OAAO;AACL,WAAK,WAAW,KAAK,MAAM,KAAK,YAAY;AAC5C,aAAO,KAAK,KAAK,MAAM,EAAE,QAAQ,CAAC,QAAQ;AACxC,aAAK,SAAS,KAAK,CAAC,GAAG,KAAK,OAAO,KAAK,KAAK,GAAG,KAAK,OAAO,KAAK,MAAM;AAAA,MACzE,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,iBAAiB,QAAQ;AACvB,QAAI,OAAO,WAAW,YAAY,WAAW,QAAQ;AACnD,cAAQ,MAAM,mCAAmC;AACjD;AAAA,IACF;AACA,SAAK,gBAAgB;AACrB,QAAI,KAAK,aAAa;AACpB,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AAAA,EACA,UAAU,UAAU;AAClB,SAAK,oBAAoB;AACzB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,UAAU;AACf,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AACF;",
  "names": []
}
