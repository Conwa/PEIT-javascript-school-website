(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))t(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function s(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerpolicy&&(i.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?i.credentials="include":r.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(r){if(r.ep)return;r.ep=!0;const i=s(r);fetch(r.href,i)}})();var x=Object.defineProperty,C=Object.getOwnPropertySymbols,M=Object.prototype.hasOwnProperty,$=Object.prototype.propertyIsEnumerable,F=(l,e,s)=>e in l?x(l,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):l[e]=s,E=(l,e)=>{for(var s in e||(e={}))M.call(e,s)&&F(l,s,e[s]);if(C)for(var s of C(e))$.call(e,s)&&F(l,s,e[s]);return l},h=(l,e,s)=>(F(l,typeof e!="symbol"?e+"":e,s),s);const T=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,_=/^[0-9]+$/,P=/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/,V=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,j=l=>{let e=l;return typeof l=="string"&&(e=l.trim()),!e},q=l=>T.test(l),A=(l,e)=>l.length>e,O=(l,e)=>l.length<e,G=l=>_.test(l),N=l=>P.test(l),z=l=>V.test(l),H=(l,e)=>l>e,D=(l,e)=>l<e;var u=(l=>(l.Required="required",l.Email="email",l.MinLength="minLength",l.MaxLength="maxLength",l.Password="password",l.Number="number",l.MaxNumber="maxNumber",l.MinNumber="minNumber",l.StrongPassword="strongPassword",l.CustomRegexp="customRegexp",l.MinFilesCount="minFilesCount",l.MaxFilesCount="maxFilesCount",l.Files="files",l))(u||{}),v=(l=>(l.Required="required",l))(v||{}),w=(l=>(l.Label="label",l.LabelArrow="labelArrow",l))(w||{});const X=(l,e)=>{switch(l){case u.Required:return"The field is required";case u.Email:return"Email has invalid format";case u.MaxLength:return"The field must contain a maximum of :value characters".replace(":value",String(e));case u.MinLength:return"The field must contain a minimum of :value characters".replace(":value",String(e));case u.Password:return"Password must contain minimum eight characters, at least one letter and one number";case u.Number:return"Value should be a number";case u.StrongPassword:return"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character";case u.MaxNumber:return"Number should be less or equal than :value".replace(":value",String(e));case u.MinNumber:return"Number should be more or equal than :value".replace(":value",String(e));case u.MinFilesCount:return"Files count should be more or equal than :value".replace(":value",String(e));case u.MaxFilesCount:return"Files count should be less or equal than :value".replace(":value",String(e));case u.Files:return"Uploaded files have one or several invalid properties (extension/size/type etc)";default:return"Value is incorrect"}},Z=l=>{switch(l){case v.Required:return"The field is required";default:return"Group is incorrect"}},p=l=>!!l&&typeof l.then=="function",B=l=>{let e=l;const s=[];for(;e;)s.unshift(e),e=e.parentNode;return s},W=(l,e)=>{const s=[...e].reverse();for(let t=0,r=s.length;t<r;++t){const i=s[t];for(const o in l){const a=l[o];if(a.groupElem===i)return[o,a]}}return null},b=l=>Array.isArray(l)?l.filter(e=>e.length>0):typeof l=="string"&&l.trim()?[...l.split(" ").filter(e=>e.length>0)]:[],Y=".just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}",m=5,y={errorFieldStyle:{color:"#b81111",border:"1px solid #B81111"},errorFieldCssClass:"just-validate-error-field",successFieldCssClass:"just-validate-success-field",errorLabelStyle:{color:"#b81111"},errorLabelCssClass:"just-validate-error-label",successLabelCssClass:"just-validate-success-label",focusInvalidField:!0,lockForm:!0,testingMode:!1};class L{constructor(e,s,t){h(this,"form",null),h(this,"fields",{}),h(this,"groupFields",{}),h(this,"errors",{}),h(this,"isValid",!1),h(this,"isSubmitted",!1),h(this,"globalConfig",y),h(this,"errorLabels",{}),h(this,"successLabels",{}),h(this,"eventListeners",[]),h(this,"dictLocale",[]),h(this,"currentLocale"),h(this,"customStyleTags",{}),h(this,"onSuccessCallback"),h(this,"onFailCallback"),h(this,"tooltips",[]),h(this,"lastScrollPosition"),h(this,"isScrollTick"),h(this,"refreshAllTooltips",()=>{this.tooltips.forEach(r=>{r.refresh()})}),h(this,"handleDocumentScroll",()=>{this.lastScrollPosition=window.scrollY,this.isScrollTick||(window.requestAnimationFrame(()=>{this.refreshAllTooltips(),this.isScrollTick=!1}),this.isScrollTick=!0)}),h(this,"formSubmitHandler",r=>{r.preventDefault(),this.isSubmitted=!0,this.validateHandler(r)}),h(this,"handleFieldChange",r=>{let i;for(const o in this.fields)if(this.fields[o].elem===r){i=o;break}!i||this.validateField(i,!0)}),h(this,"handleGroupChange",r=>{let i,o;for(const a in this.groupFields){const c=this.groupFields[a];if(c.elems.find(n=>n===r)){i=c,o=a;break}}!i||!o||this.validateGroup(o,i)}),h(this,"handlerChange",r=>{!r.target||(this.handleFieldChange(r.target),this.handleGroupChange(r.target),this.renderErrors())}),this.initialize(e,s,t)}initialize(e,s,t){if(this.form=null,this.errors={},this.isValid=!1,this.isSubmitted=!1,this.globalConfig=y,this.errorLabels={},this.successLabels={},this.eventListeners=[],this.customStyleTags={},this.tooltips=[],typeof e=="string"){const r=document.querySelector(e);if(!r)throw Error(`Form with ${e} selector not found! Please check the form selector`);this.setForm(r)}else if(e instanceof HTMLFormElement)this.setForm(e);else throw Error("Form selector is not valid. Please specify a string selector or a DOM element.");if(this.globalConfig=E(E({},y),s),t&&(this.dictLocale=t),this.isTooltip()){const r=document.createElement("style");r.textContent=Y,this.customStyleTags[w.Label]=document.head.appendChild(r),this.addListener("scroll",document,this.handleDocumentScroll)}}getLocalisedString(e){var s;return!this.currentLocale||!this.dictLocale.length?e:((s=this.dictLocale.find(r=>r.key===e))==null?void 0:s.dict[this.currentLocale])||e}getFieldErrorMessage(e,s){const t=typeof e.errorMessage=="function"?e.errorMessage(this.getElemValue(s),this.fields):e.errorMessage;return this.getLocalisedString(t)||X(e.rule,e.value)}getFieldSuccessMessage(e,s){const t=typeof e=="function"?e(this.getElemValue(s),this.fields):e;return this.getLocalisedString(t)}getGroupErrorMessage(e){return this.getLocalisedString(e.errorMessage)||Z(e.rule)}getGroupSuccessMessage(e){return this.getLocalisedString(e.successMessage)}setFieldInvalid(e,s){this.fields[e].isValid=!1,this.fields[e].errorMessage=this.getFieldErrorMessage(s,this.fields[e].elem)}setFieldValid(e,s){this.fields[e].isValid=!0,s!==void 0&&(this.fields[e].successMessage=this.getFieldSuccessMessage(s,this.fields[e].elem))}setGroupInvalid(e,s){this.groupFields[e].isValid=!1,this.groupFields[e].errorMessage=this.getGroupErrorMessage(s)}setGroupValid(e,s){this.groupFields[e].isValid=!0,this.groupFields[e].successMessage=this.getGroupSuccessMessage(s)}getElemValue(e){switch(e.type){case"checkbox":return e.checked;case"file":return e.files;default:return e.value}}validateGroupRule(e,s,t){switch(t.rule){case v.Required:s.every(r=>!r.checked)?this.setGroupInvalid(e,t):this.setGroupValid(e,t)}}validateFieldRule(e,s,t,r=!1){const i=t.value,o=this.getElemValue(s);if(t.plugin){t.plugin(o,this.fields)||this.setFieldInvalid(e,t);return}switch(t.rule){case u.Required:{j(o)&&this.setFieldInvalid(e,t);break}case u.Email:{if(typeof o!="string"){this.setFieldInvalid(e,t);break}q(o)||this.setFieldInvalid(e,t);break}case u.MaxLength:{if(i===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof i!="number"){console.error(`Value for ${t.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof o!="string"){this.setFieldInvalid(e,t);break}if(o==="")break;A(o,i)&&this.setFieldInvalid(e,t);break}case u.MinLength:{if(i===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof i!="number"){console.error(`Value for ${t.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof o!="string"){this.setFieldInvalid(e,t);break}if(o==="")break;O(o,i)&&this.setFieldInvalid(e,t);break}case u.Password:{if(typeof o!="string"){this.setFieldInvalid(e,t);break}if(o==="")break;N(o)||this.setFieldInvalid(e,t);break}case u.StrongPassword:{if(typeof o!="string"){this.setFieldInvalid(e,t);break}if(o==="")break;z(o)||this.setFieldInvalid(e,t);break}case u.Number:{if(typeof o!="string"){this.setFieldInvalid(e,t);break}if(o==="")break;G(o)||this.setFieldInvalid(e,t);break}case u.MaxNumber:{if(i===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof i!="number"){console.error(`Value for ${t.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof o!="string"){this.setFieldInvalid(e,t);break}if(o==="")break;const a=+o;(Number.isNaN(a)||H(a,i))&&this.setFieldInvalid(e,t);break}case u.MinNumber:{if(i===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof i!="number"){console.error(`Value for ${t.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof o!="string"){this.setFieldInvalid(e,t);break}if(o==="")break;const a=+o;(Number.isNaN(a)||D(a,i))&&this.setFieldInvalid(e,t);break}case u.CustomRegexp:{if(i===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,t);return}let a;try{a=new RegExp(i)}catch{console.error(`Value for ${t.rule} rule for [${e}] should be a valid regexp. This field will be always invalid.`),this.setFieldInvalid(e,t);break}const c=String(o);c!==""&&!a.test(c)&&this.setFieldInvalid(e,t);break}case u.MinFilesCount:{if(i===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof i!="number"){console.error(`Value for ${t.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(Number.isFinite(o==null?void 0:o.length)&&o.length<i){this.setFieldInvalid(e,t);break}break}case u.MaxFilesCount:{if(i===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof i!="number"){console.error(`Value for ${t.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(Number.isFinite(o==null?void 0:o.length)&&o.length>i){this.setFieldInvalid(e,t);break}break}case u.Files:{if(i===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,t);return}if(typeof i!="object"){console.error(`Value for ${t.rule} rule for [${e}] field should be an object. This field will be always invalid.`),this.setFieldInvalid(e,t);return}const a=i.files;if(typeof a!="object"){console.error(`Value for ${t.rule} rule for [${e}] field should be an object with files array. This field will be always invalid.`),this.setFieldInvalid(e,t);return}const c=(n,d)=>{const f=Number.isFinite(d.minSize)&&n.size<d.minSize,g=Number.isFinite(d.maxSize)&&n.size>d.maxSize,S=Array.isArray(d.names)&&!d.names.includes(n.name),k=Array.isArray(d.extensions)&&!d.extensions.includes(n.name.split(".")[n.name.split(".").length-1]),I=Array.isArray(d.types)&&!d.types.includes(n.type);return f||g||S||k||I};if(typeof o=="object"&&o!==null)for(let n=0,d=o.length;n<d;++n){const f=o.item(n);if(!f){this.setFieldInvalid(e,t);break}if(c(f,a)){this.setFieldInvalid(e,t);break}}break}default:{if(typeof t.validator!="function"){console.error(`Validator for custom rule for [${e}] field should be a function. This field will be always invalid.`),this.setFieldInvalid(e,t);return}const a=t.validator(o,this.fields);if(typeof a!="boolean"&&typeof a!="function"&&console.error(`Validator return value for [${e}] field should be boolean or function. It will be cast to boolean.`),typeof a=="function")if(r)this.fields[e].asyncCheckPending=!0;else{this.fields[e].asyncCheckPending=!1;const c=a();if(!p(c)){console.error(`Validator function for custom rule for [${e}] field should return a Promise. This field will be always invalid.`),this.setFieldInvalid(e,t);return}return c.then(n=>{n||this.setFieldInvalid(e,t)}).catch(()=>{this.setFieldInvalid(e,t)})}a||this.setFieldInvalid(e,t)}}}validateField(e,s=!1){var t;const r=this.fields[e];r.isValid=!0;const i=[];return[...r.rules].reverse().forEach(o=>{const a=this.validateFieldRule(e,r.elem,o,s);p(a)&&i.push(a)}),r.isValid&&this.setFieldValid(e,(t=r.config)==null?void 0:t.successMessage),Promise.allSettled(i)}revalidateField(e){if(typeof e!="string")throw Error("Field selector is not valid. Please specify a string selector.");return this.fields[e]?new Promise(s=>{this.validateField(e,!0).finally(()=>{this.clearFieldStyle(e),this.clearFieldLabel(e),this.renderFieldError(e),s(!!this.fields[e].isValid)})}):(console.error("Field not found. Check the field selector."),Promise.reject())}validateGroup(e,s){const t=[];return[...s.rules].reverse().forEach(r=>{const i=this.validateGroupRule(e,s.elems,r);p(i)&&t.push(i)}),Promise.allSettled(t)}focusInvalidField(){for(const e in this.fields){const s=this.fields[e];if(!s.isValid){setTimeout(()=>s.elem.focus(),0);break}}}afterSubmitValidation(e=!1){this.renderErrors(e),this.globalConfig.focusInvalidField&&this.focusInvalidField()}validate(e=!1){return new Promise(s=>{const t=[];Object.keys(this.fields).forEach(r=>{const i=this.validateField(r);p(i)&&t.push(i)}),Object.keys(this.groupFields).forEach(r=>{const i=this.groupFields[r],o=this.validateGroup(r,i);p(o)&&t.push(o)}),t.length?Promise.allSettled(t).then(()=>{this.afterSubmitValidation(e),s(!0)}):(this.afterSubmitValidation(e),s(!1))})}revalidate(){return new Promise(e=>{this.validateHandler(void 0,!0).finally(()=>{this.globalConfig.focusInvalidField&&this.focusInvalidField(),e(this.isValid)})})}validateHandler(e,s=!1){return this.globalConfig.lockForm&&this.lockForm(),this.validate(s).finally(()=>{var t,r;this.globalConfig.lockForm&&this.unlockForm(),this.isValid?(t=this.onSuccessCallback)==null||t.call(this,e):(r=this.onFailCallback)==null||r.call(this,this.fields,this.groupFields)})}setForm(e){this.form=e,this.form.setAttribute("novalidate","novalidate"),this.removeListener("submit",this.form,this.formSubmitHandler),this.addListener("submit",this.form,this.formSubmitHandler)}addListener(e,s,t){s.addEventListener(e,t),this.eventListeners.push({type:e,elem:s,func:t})}removeListener(e,s,t){s.removeEventListener(e,t),this.eventListeners=this.eventListeners.filter(r=>r.type!==e||r.elem!==s)}addField(e,s,t){if(typeof e!="string")throw Error("Field selector is not valid. Please specify a string selector.");const r=this.form.querySelector(e);if(!r)throw Error(`Field with ${e} selector not found! Please check the field selector.`);if(!Array.isArray(s)||!s.length)throw Error(`Rules argument for the field [${e}] should be an array and should contain at least 1 element.`);return s.forEach(i=>{if(!("rule"in i||"validator"in i||"plugin"in i))throw Error(`Rules argument for the field [${e}] must contain at least one rule or validator property.`);if(!i.validator&&!i.plugin&&(!i.rule||!Object.values(u).includes(i.rule)))throw Error(`Rule should be one of these types: ${Object.values(u).join(", ")}. Provided value: ${i.rule}`)}),this.fields[e]={elem:r,rules:s,isValid:void 0,config:t},this.setListeners(r),this.isSubmitted&&this.validate(),this}removeField(e){if(typeof e!="string")throw Error("Field selector is not valid. Please specify a string selector.");if(!this.fields[e])return console.error("Field not found. Check the field selector."),this;const s=this.getListenerType(this.fields[e].elem.type);return this.removeListener(s,this.fields[e].elem,this.handlerChange),this.clearErrors(),delete this.fields[e],this}removeGroup(e){if(typeof e!="string")throw Error("Group selector is not valid. Please specify a string selector.");return this.groupFields[e]?(this.groupFields[e].elems.forEach(s=>{const t=this.getListenerType(s.type);this.removeListener(t,s,this.handlerChange)}),this.clearErrors(),delete this.groupFields[e],this):(console.error("Group not found. Check the group selector."),this)}addRequiredGroup(e,s,t,r){if(typeof e!="string")throw Error("Group selector is not valid. Please specify a string selector.");const i=this.form.querySelector(e);if(!i)throw Error(`Group with ${e} selector not found! Please check the group selector.`);const o=i.querySelectorAll("input"),a=Array.from(o).filter(c=>{const n=W(this.groupFields,B(c));return n?n[1].elems.find(d=>d!==c):!0});return this.groupFields[e]={rules:[{rule:v.Required,errorMessage:s,successMessage:r}],groupElem:i,elems:a,isDirty:!1,isValid:void 0,config:t},o.forEach(c=>{this.setListeners(c)}),this}getListenerType(e){switch(e){case"checkbox":case"select-one":case"file":case"radio":return"change";default:return"input"}}setListeners(e){const s=this.getListenerType(e.type);this.removeListener(s,e,this.handlerChange),this.addListener(s,e,this.handlerChange)}clearFieldLabel(e){var s,t;(s=this.errorLabels[e])==null||s.remove(),(t=this.successLabels[e])==null||t.remove()}clearFieldStyle(e){var s,t,r,i;const o=this.fields[e],a=((s=o.config)==null?void 0:s.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(a).forEach(n=>{o.elem.style[n]=""});const c=((t=o.config)==null?void 0:t.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(c).forEach(n=>{o.elem.style[n]=""}),o.elem.classList.remove(...b(((r=o.config)==null?void 0:r.errorFieldCssClass)||this.globalConfig.errorFieldCssClass),...b(((i=o.config)==null?void 0:i.successFieldCssClass)||this.globalConfig.successFieldCssClass))}clearErrors(){var e,s;Object.keys(this.errorLabels).forEach(t=>this.errorLabels[t].remove()),Object.keys(this.successLabels).forEach(t=>this.successLabels[t].remove());for(const t in this.fields)this.clearFieldStyle(t);for(const t in this.groupFields){const r=this.groupFields[t],i=((e=r.config)==null?void 0:e.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(i).forEach(a=>{r.elems.forEach(c=>{var n;c.style[a]="",c.classList.remove(...b(((n=r.config)==null?void 0:n.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))})});const o=((s=r.config)==null?void 0:s.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(o).forEach(a=>{r.elems.forEach(c=>{var n;c.style[a]="",c.classList.remove(...b(((n=r.config)==null?void 0:n.successFieldCssClass)||this.globalConfig.successFieldCssClass))})})}this.tooltips=[]}isTooltip(){return!!this.globalConfig.tooltip}lockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let s=0,t=e.length;s<t;++s)e[s].setAttribute("data-just-validate-fallback-disabled",e[s].disabled?"true":"false"),e[s].setAttribute("disabled","disabled"),e[s].style.pointerEvents="none",e[s].style.webkitFilter="grayscale(100%)",e[s].style.filter="grayscale(100%)"}unlockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let s=0,t=e.length;s<t;++s)e[s].getAttribute("data-just-validate-fallback-disabled")!=="true"&&e[s].removeAttribute("disabled"),e[s].style.pointerEvents="",e[s].style.webkitFilter="",e[s].style.filter=""}renderTooltip(e,s,t){var r;const{top:i,left:o,width:a,height:c}=e.getBoundingClientRect(),n=s.getBoundingClientRect(),d=t||((r=this.globalConfig.tooltip)==null?void 0:r.position);switch(d){case"left":{s.style.top=`${i+c/2-n.height/2}px`,s.style.left=`${o-n.width-m}px`;break}case"top":{s.style.top=`${i-n.height-m}px`,s.style.left=`${o+a/2-n.width/2}px`;break}case"right":{s.style.top=`${i+c/2-n.height/2}px`,s.style.left=`${o+a+m}px`;break}case"bottom":{s.style.top=`${i+c+m}px`,s.style.left=`${o+a/2-n.width/2}px`;break}}return s.dataset.direction=d,{refresh:()=>{this.renderTooltip(e,s,t)}}}createErrorLabelElem(e,s,t){const r=document.createElement("div");r.innerHTML=s;const i=this.isTooltip()?t==null?void 0:t.errorLabelStyle:(t==null?void 0:t.errorLabelStyle)||this.globalConfig.errorLabelStyle;return Object.assign(r.style,i),r.classList.add(...b((t==null?void 0:t.errorLabelCssClass)||this.globalConfig.errorLabelCssClass),"just-validate-error-label"),this.isTooltip()&&(r.dataset.tooltip="true"),this.globalConfig.testingMode&&(r.dataset.testId=`error-label-${e}`),this.errorLabels[e]=r,r}createSuccessLabelElem(e,s,t){if(s===void 0)return null;const r=document.createElement("div");r.innerHTML=s;const i=(t==null?void 0:t.successLabelStyle)||this.globalConfig.successLabelStyle;return Object.assign(r.style,i),r.classList.add(...b((t==null?void 0:t.successLabelCssClass)||this.globalConfig.successLabelCssClass),"just-validate-success-label"),this.globalConfig.testingMode&&(r.dataset.testId=`success-label-${e}`),this.successLabels[e]=r,r}renderErrorsContainer(e,s){const t=s||this.globalConfig.errorsContainer;if(typeof t=="string"){const r=this.form.querySelector(t);if(r)return r.appendChild(e),!0;console.error(`Error container with ${t} selector not found. Errors will be rendered as usual`)}return t instanceof Element?(t.appendChild(e),!0):(t!==void 0&&console.error("Error container not found. It should be a string or existing Element. Errors will be rendered as usual"),!1)}renderGroupLabel(e,s,t,r){!r&&this.renderErrorsContainer(s,t)||e.appendChild(s)}renderFieldLabel(e,s,t,r){var i,o,a,c,n,d,f;if(!(!r&&this.renderErrorsContainer(s,t)))if(e.type==="checkbox"||e.type==="radio"){const g=document.querySelector(`label[for="${e.getAttribute("id")}"]`);((o=(i=e.parentElement)==null?void 0:i.tagName)==null?void 0:o.toLowerCase())==="label"?(c=(a=e.parentElement)==null?void 0:a.parentElement)==null||c.appendChild(s):g?(n=g.parentElement)==null||n.appendChild(s):(d=e.parentElement)==null||d.appendChild(s)}else(f=e.parentElement)==null||f.appendChild(s)}showLabels(e,s){Object.keys(e).forEach((t,r)=>{const i=e[t],o=this.fields[t];o.isValid=!s,this.clearFieldStyle(t),this.clearFieldLabel(t),this.renderFieldError(t,i),r===0&&this.globalConfig.focusInvalidField&&setTimeout(()=>o.elem.focus(),0)})}showErrors(e){if(typeof e!="object")throw Error("[showErrors]: Errors should be an object with key: value format");this.showLabels(e,!0)}showSuccessLabels(e){if(typeof e!="object")throw Error("[showSuccessLabels]: Labels should be an object with key: value format");this.showLabels(e,!1)}renderFieldError(e,s){var t,r,i,o,a,c;const n=this.fields[e];if(n.isValid){if(!n.asyncCheckPending){const f=this.createSuccessLabelElem(e,s!==void 0?s:n.successMessage,n.config);f&&this.renderFieldLabel(n.elem,f,(t=n.config)==null?void 0:t.errorsContainer,!0),n.elem.classList.add(...b(((r=n.config)==null?void 0:r.successFieldCssClass)||this.globalConfig.successFieldCssClass))}return}this.isValid=!1,n.elem.classList.add(...b(((i=n.config)==null?void 0:i.errorFieldCssClass)||this.globalConfig.errorFieldCssClass));const d=this.createErrorLabelElem(e,s!==void 0?s:n.errorMessage,n.config);this.renderFieldLabel(n.elem,d,(o=n.config)==null?void 0:o.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(n.elem,d,(c=(a=n.config)==null?void 0:a.tooltip)==null?void 0:c.position))}renderErrors(e=!1){var s,t,r,i;if(!(!this.isSubmitted&&!e)){this.clearErrors(),this.isValid=!0;for(const o in this.groupFields){const a=this.groupFields[o];if(a.isValid){a.elems.forEach(d=>{var f,g;Object.assign(d.style,((f=a.config)==null?void 0:f.successFieldStyle)||this.globalConfig.successFieldStyle),d.classList.add(...b(((g=a.config)==null?void 0:g.successFieldCssClass)||this.globalConfig.successFieldCssClass))});const n=this.createSuccessLabelElem(o,a.successMessage,a.config);n&&this.renderGroupLabel(a.groupElem,n,(s=a.config)==null?void 0:s.errorsContainer,!0);continue}this.isValid=!1,a.elems.forEach(n=>{var d,f;Object.assign(n.style,((d=a.config)==null?void 0:d.errorFieldStyle)||this.globalConfig.errorFieldStyle),n.classList.add(...b(((f=a.config)==null?void 0:f.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))});const c=this.createErrorLabelElem(o,a.errorMessage,a.config);this.renderGroupLabel(a.groupElem,c,(t=a.config)==null?void 0:t.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(a.groupElem,c,(i=(r=a.config)==null?void 0:r.tooltip)==null?void 0:i.position))}for(const o in this.fields)this.renderFieldError(o)}}destroy(){this.eventListeners.forEach(e=>{this.removeListener(e.type,e.elem,e.func)}),Object.keys(this.customStyleTags).forEach(e=>{this.customStyleTags[e].remove()}),this.clearErrors(),this.globalConfig.lockForm&&this.unlockForm()}refresh(){this.destroy(),this.form?(this.initialize(this.form,this.globalConfig),Object.keys(this.fields).forEach(e=>{this.addField(e,[...this.fields[e].rules],this.fields[e].config)})):console.error("Cannot initialize the library! Form is not defined")}setCurrentLocale(e){if(typeof e!="string"&&e!==void 0){console.error("Current locale should be a string");return}this.currentLocale=e,this.isSubmitted&&this.validate()}onSuccess(e){return this.onSuccessCallback=e,this}onFail(e){return this.onFailCallback=e,this}}const U=new L("#contact-form");console.log("acutalicse");U.addField("#name",[{rule:"required",errorMessage:"Name is required"},{rule:"minLength",value:4},{rule:"maxLength",value:30}]).addField("#email",[{rule:"required",errorMessage:"Email is required"},{rule:"email",errorMessage:"Email is invalid!"}]).addField("#message",[{rule:"required",errorMessage:"Cant send empty message"}]);const J=new L("#contact-form--celulares");J.addField("#name",[{rule:"required",errorMessage:"Name is required"},{rule:"minLength",value:5},{rule:"maxLength",value:35}]).addField("#email",[{rule:"required",errorMessage:"Email is required"},{rule:"email",errorMessage:"Email is invalid!"}]).addField("#message",[{rule:"required"}]);console.log("estoy");
